{
	"id": 0,
	"name": "@xeokit/cameracontrol",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 24,
			"name": "CameraControl",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@desc",
						"content": [
							{
								"kind": "text",
								"text": "Controls the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "Camera"
							},
							{
								"kind": "text",
								"text": " with user input, and fires events when the user interacts with pickable "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "Entity"
							},
							{
								"kind": "text",
								"text": "s.\n\n# Contents\n\n* [Overview](#overview)\n* [Examples](#examples)\n* [Orbit Mode](#orbit-mode)\n     + [Following the Pointer in Orbit Mode](#--following-the-pointer-in-orbit-mode--)\n     + [Showing the Pivot Position](#--showing-the-pivot-position--)\n     + [Axis-Aligned Views in Orbit Mode](#--axis-aligned-views-in-orbit-mode--)\n     + [View-Fitting Entitys in Orbit Mode](#--view-fitting-entitys-in-orbit-mode--)\n* [First-Person Mode](#first-person-mode)\n     + [Following the Pointer in First-Person Mode](#--following-the-pointer-in-first-person-mode--)\n     + [Constraining Vertical Position in First-Person Mode](#--constraining-vertical-position-in-first-person-mode--)\n     + [Axis-Aligned Views in First-Person Mode](#--axis-aligned-views-in-first-person-mode--)\n     + [View-Fitting Entitys in First-Person Mode](#--view-fitting-entitys-in-first-person-mode--)\n* [Plan-View Mode](#plan-view-mode)\n     + [Following the Pointer in Plan-View Mode](#--following-the-pointer-in-plan-view-mode--)\n     + [Axis-Aligned Views in Plan-View Mode](#--axis-aligned-views-in-plan-view-mode--)\n* [CameraControl Events](#cameracontrol-events)\n     + [\"hover\"](#---hover---)\n     + [\"hoverOff\"](#---hoveroff---)\n     + [\"hoverEnter\"](#---hoverenter---)\n     + [\"hoverOut\"](#---hoverout---)\n     + [\"picked\"](#---picked---)\n     + [\"pickedSurface\"](#---pickedsurface---)\n     + [\"pickedNothing\"](#---pickednothing---)\n     + [\"doublePicked\"](#---doublepicked---)\n     + [\"doublePickedSurface\"](#---doublepickedsurface---)\n     + [\"doublePickedNothing\"](#---doublepickednothing---)\n     + [\"rightClick\"](#---rightclick---)\n* [Custom Keyboard Mappings](#custom-keyboard-mappings)\n\n<br><br>\n\n# Overview\n\n* Each "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "Viewer"
							},
							{
								"kind": "text",
								"text": " has a "
							},
							{
								"kind": "code",
								"text": "````CameraControl````"
							},
							{
								"kind": "text",
								"text": ", located at "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "Viewer#cameraControl"
							},
							{
								"kind": "text",
								"text": ".\n* "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "CameraControl#navMode",
								"target": 160,
								"tsLinkText": ""
							},
							{
								"kind": "text",
								"text": " selects the navigation mode:\n     * "
							},
							{
								"kind": "code",
								"text": "````OrbitNavigationMode````"
							},
							{
								"kind": "text",
								"text": " rotates the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "Camera"
							},
							{
								"kind": "text",
								"text": " position about the target.\n     * "
							},
							{
								"kind": "code",
								"text": "````\"firstPerson\"````"
							},
							{
								"kind": "text",
								"text": " rotates the World about the Camera position.\n     * "
							},
							{
								"kind": "code",
								"text": "````\"planView\"````"
							},
							{
								"kind": "text",
								"text": " never rotates, but still allows to pan and dolly, typically for an axis-aligned view.\n* "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "CameraControl#followPointer",
								"target": 170,
								"tsLinkText": ""
							},
							{
								"kind": "text",
								"text": " makes the Camera follow the mouse or touch pointer.\n* "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "CameraControl#constrainVertical",
								"target": 194,
								"tsLinkText": ""
							},
							{
								"kind": "text",
								"text": " locks the Camera to its current height when in first-person mode.\n* "
							},
							{
								"kind": "code",
								"text": "````CameraControl````"
							},
							{
								"kind": "text",
								"text": " fires pick events when we hover, click or tap on an "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "Entity"
							},
							{
								"kind": "text",
								"text": ".\n<br><br>\n\n# Examples\n\n* [Orbit Navigation - Duplex Model](https://xeokit.github.io/xeokit-sdk/examples/index.html#CameraControl_orbit_Duplex)\n* [Orbit Navigation - Holter Tower Model](https://xeokit.github.io/xeokit-sdk/examples/index.html#CameraControl_orbit_HolterTower)\n* [First-Person Navigation - Duplex Model](https://xeokit.github.io/xeokit-sdk/examples/index.html#CameraControl_firstPerson_Duplex)\n* [First-Person Navigation - Holter Tower Model](https://xeokit.github.io/xeokit-sdk/examples/index.html#CameraControl_firstPerson_HolterTower)\n* [Plan-view Navigation - Schependomlaan Model](https://xeokit.github.io/xeokit-sdk/examples/index.html#CameraControl_planView_Schependomlaan)\n* [Custom Keyboard Mapping](https://xeokit.github.io/xeokit-sdk/examples/index.html#CameraControl_keyMap)\n<br><br>\n\n# Orbit Mode\n\nIn orbit mode, "
							},
							{
								"kind": "code",
								"text": "````CameraControl````"
							},
							{
								"kind": "text",
								"text": " orbits the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "Camera"
							},
							{
								"kind": "text",
								"text": " about the target.\n\nTo enable orbit mode:\n\n"
							},
							{
								"kind": "code",
								"text": "````javascript\nconst cameraControl = myViewer.cameraControl;\ncameraControl.navMode = OrbitNavigationMode;\n````"
							},
							{
								"kind": "text",
								"text": "\n\nThen orbit by:\n\n* left-dragging the mouse,\n* tap-dragging the touch pad, and\n* pressing arrow keys, or "
							},
							{
								"kind": "code",
								"text": "````Q````"
							},
							{
								"kind": "text",
								"text": " and "
							},
							{
								"kind": "code",
								"text": "````E````"
							},
							{
								"kind": "text",
								"text": " on a QWERTY keyboard, or "
							},
							{
								"kind": "code",
								"text": "````A````"
							},
							{
								"kind": "text",
								"text": " and "
							},
							{
								"kind": "code",
								"text": "````E````"
							},
							{
								"kind": "text",
								"text": " on an AZERTY keyboard.\n<br><br>\n\nDolly forwards and backwards by:\n\n* spinning the mouse wheel,\n* pinching on the touch pad, and\n* pressing the "
							},
							{
								"kind": "code",
								"text": "````+````"
							},
							{
								"kind": "text",
								"text": " and "
							},
							{
								"kind": "code",
								"text": "````-````"
							},
							{
								"kind": "text",
								"text": " keys, or "
							},
							{
								"kind": "code",
								"text": "````W````"
							},
							{
								"kind": "text",
								"text": " and "
							},
							{
								"kind": "code",
								"text": "````S````"
							},
							{
								"kind": "text",
								"text": " on a QWERTY keyboard, or "
							},
							{
								"kind": "code",
								"text": "````Z````"
							},
							{
								"kind": "text",
								"text": " and "
							},
							{
								"kind": "code",
								"text": "````S````"
							},
							{
								"kind": "text",
								"text": " for AZERTY.\n<br><br>\n\nPan horizontally and vertically by:\n\n* right-dragging the mouse,\n* left-dragging the mouse with the SHIFT key down,\n* tap-dragging the touch pad with SHIFT down,\n* pressing the "
							},
							{
								"kind": "code",
								"text": "````A````"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "````D````"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "````Z````"
							},
							{
								"kind": "text",
								"text": " and "
							},
							{
								"kind": "code",
								"text": "````X````"
							},
							{
								"kind": "text",
								"text": " keys on a QWERTY keyboard, and\n* pressing the "
							},
							{
								"kind": "code",
								"text": "````Q````"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "````D````"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "````W````"
							},
							{
								"kind": "text",
								"text": " and "
							},
							{
								"kind": "code",
								"text": "````X````"
							},
							{
								"kind": "text",
								"text": " keys on an AZERTY keyboard,\n<br><br>\n\n## Following the Pointer in Orbit Mode\n\nWhen "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "CameraControl#followPointer",
								"target": 170,
								"tsLinkText": ""
							},
							{
								"kind": "text",
								"text": " is "
							},
							{
								"kind": "code",
								"text": "````true````"
							},
							{
								"kind": "text",
								"text": "in orbiting mode, the mouse or touch pointer will dynamically\nindicate the target that the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "Camera"
							},
							{
								"kind": "text",
								"text": " will orbit, as well as dolly to and from.\n\nLets ensure that we're in orbit mode, then enable the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "Camera"
							},
							{
								"kind": "text",
								"text": " to follow the pointer:\n\n"
							},
							{
								"kind": "code",
								"text": "````javascript\ncameraControl.navMode = OrbitNavigationMode;\ncameraControl.followPointer = true;\n````"
							},
							{
								"kind": "text",
								"text": "\n\n## Smart Pivoting\n\nTODO\n\n## Showing the Pivot Position\n\nWe can configure "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "CameraControl#pivotElement",
								"target": 137,
								"tsLinkText": ""
							},
							{
								"kind": "text",
								"text": " with an HTML element to indicate the current\npivot position. The indicator will appear momentarily each time we move the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "Camera"
							},
							{
								"kind": "text",
								"text": " while in orbit mode with\n"
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "CameraControl#followPointer",
								"target": 170,
								"tsLinkText": ""
							},
							{
								"kind": "text",
								"text": " set "
							},
							{
								"kind": "code",
								"text": "````true````"
							},
							{
								"kind": "text",
								"text": ".\n\nFirst we'll define some CSS to style our pivot indicator as a black dot with a white border:\n\n"
							},
							{
								"kind": "code",
								"text": "````css\n.camera-pivot-marker {\n     color: #ffffff;\n     position: absolute;\n     width: 25px;\n     height: 25px;\n     border-radius: 15px;\n     border: 2px solid #ebebeb;\n     background: black;\n     visibility: hidden;\n     box-shadow: 5px 5px 15px 1px #000000;\n     z-index: 10000;\n     pointer-events: none;\n}\n````"
							},
							{
								"kind": "text",
								"text": "\n\nThen we'll attach our pivot indicator's HTML element to the "
							},
							{
								"kind": "code",
								"text": "````CameraControl````"
							},
							{
								"kind": "text",
								"text": ":\n\n"
							},
							{
								"kind": "code",
								"text": "````javascript\nconst pivotElement = document.createRange().createContextualFragment(\"<div class='camera-pivot-marker'></div>\").firstChild;\n\ndocument.body.appendChild(pivotElement);\n\ncameraControl.pivotElement = pivotElement;\n````"
							},
							{
								"kind": "text",
								"text": "\n\n## Axis-Aligned Views in Orbit Mode\n\nIn orbit mode, we can use keys 1-6 to position the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "Camera"
							},
							{
								"kind": "text",
								"text": " to look at the center of the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "Scene"
							},
							{
								"kind": "text",
								"text": " from along each of the\nsix World-space axis. Pressing one of these keys will fly the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "Camera"
							},
							{
								"kind": "text",
								"text": " to the corresponding axis-aligned view.\n\n## View-Fitting Entitys in Orbit Mode\n\nWhen "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "CameraControl#doublePickFlyTo",
								"target": 198,
								"tsLinkText": ""
							},
							{
								"kind": "text",
								"text": " is "
							},
							{
								"kind": "code",
								"text": "````true````"
							},
							{
								"kind": "text",
								"text": ", we can left-double-click or\ndouble-tap (ie. \"double-pick\") an "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "Entity"
							},
							{
								"kind": "text",
								"text": " to fit it to view. This will cause the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "Camera"
							},
							{
								"kind": "text",
								"text": "\nto fly to that Entity. Our target then becomes the center of that Entity. If we are currently pivoting,\nthen our pivot position is then also set to the Entity center.\n\nDisable that behaviour by setting "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "CameraControl#doublePickFlyTo",
								"target": 198,
								"tsLinkText": ""
							},
							{
								"kind": "text",
								"text": " "
							},
							{
								"kind": "code",
								"text": "````false````"
							},
							{
								"kind": "text",
								"text": ".\n\n# First-Person Mode\n\nIn first-person mode, "
							},
							{
								"kind": "code",
								"text": "````CameraControl````"
							},
							{
								"kind": "text",
								"text": " rotates the World about the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "Camera"
							},
							{
								"kind": "text",
								"text": " position.\n\nTo enable first-person mode:\n\n"
							},
							{
								"kind": "code",
								"text": "````javascript\ncameraControl.navMode = \"firstPerson\";\n````"
							},
							{
								"kind": "text",
								"text": "\n\nThen rotate by:\n\n* left-dragging the mouse,\n* tap-dragging the touch pad,\n* pressing arrow keys, or "
							},
							{
								"kind": "code",
								"text": "````Q````"
							},
							{
								"kind": "text",
								"text": " and "
							},
							{
								"kind": "code",
								"text": "````E````"
							},
							{
								"kind": "text",
								"text": " on a QWERTY keyboard, or "
							},
							{
								"kind": "code",
								"text": "````A````"
							},
							{
								"kind": "text",
								"text": " and "
							},
							{
								"kind": "code",
								"text": "````E````"
							},
							{
								"kind": "text",
								"text": " on an AZERTY keyboard.\n<br><br>\n\nDolly forwards and backwards by:\n\n* spinning the mouse wheel,\n* pinching on the touch pad, and\n* pressing the "
							},
							{
								"kind": "code",
								"text": "````+````"
							},
							{
								"kind": "text",
								"text": " and "
							},
							{
								"kind": "code",
								"text": "````-````"
							},
							{
								"kind": "text",
								"text": " keys, or "
							},
							{
								"kind": "code",
								"text": "````W````"
							},
							{
								"kind": "text",
								"text": " and "
							},
							{
								"kind": "code",
								"text": "````S````"
							},
							{
								"kind": "text",
								"text": " on a QWERTY keyboard, or "
							},
							{
								"kind": "code",
								"text": "````Z````"
							},
							{
								"kind": "text",
								"text": " and "
							},
							{
								"kind": "code",
								"text": "````S````"
							},
							{
								"kind": "text",
								"text": " for AZERTY.\n<br><br>\n\nPan left, right, up and down by:\n\n* left-dragging or right-dragging the mouse, and\n* tap-dragging the touch pad with SHIFT down.\n\nPan forwards, backwards, left, right, up and down by pressing the "
							},
							{
								"kind": "code",
								"text": "````WSADZX````"
							},
							{
								"kind": "text",
								"text": " keys on a QWERTY keyboard,\nor "
							},
							{
								"kind": "code",
								"text": "````WSQDWX````"
							},
							{
								"kind": "text",
								"text": " keys on an AZERTY keyboard.\n<br><br>\n\n## Following the Pointer in First-Person Mode\n\nWhen "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "CameraControl#followPointer",
								"target": 170,
								"tsLinkText": ""
							},
							{
								"kind": "text",
								"text": " is "
							},
							{
								"kind": "code",
								"text": "````true````"
							},
							{
								"kind": "text",
								"text": " in first-person mode, the mouse or touch pointer will dynamically\nindicate the target to which the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "Camera"
							},
							{
								"kind": "text",
								"text": " will dolly to and from. In first-person mode, however, the World will always rotate\nabout the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "Camera"
							},
							{
								"kind": "text",
								"text": " position.\n\nLets ensure that we're in first-person mode, then enable the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "Camera"
							},
							{
								"kind": "text",
								"text": " to follow the pointer:\n\n"
							},
							{
								"kind": "code",
								"text": "````javascript\ncameraControl.navMode = \"firstPerson\";\ncameraControl.followPointer = true;\n````"
							},
							{
								"kind": "text",
								"text": "\n\nWhen the pointer is over empty space, the target will remain the last object that the pointer was over.\n\n## Constraining Vertical Position in First-Person Mode\n\nIn first-person mode, we can lock the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "Camera"
							},
							{
								"kind": "text",
								"text": " to its current position on the vertical World axis, which is useful for walk-through navigation:\n\n"
							},
							{
								"kind": "code",
								"text": "````javascript\ncameraControl.constrainVertical = true;\n````"
							},
							{
								"kind": "text",
								"text": "\n\n## Axis-Aligned Views in First-Person Mode\n\nIn first-person mode we can use keys 1-6 to position the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "Camera"
							},
							{
								"kind": "text",
								"text": " to look at the center of\nthe "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "Scene"
							},
							{
								"kind": "text",
								"text": " from along each of the six World-space axis. Pressing one of these keys will fly the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "Camera"
							},
							{
								"kind": "text",
								"text": " to the\ncorresponding axis-aligned view.\n\n## View-Fitting Entitys in First-Person Mode\n\nAs in orbit mode, when in first-person mode and "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "CameraControl#doublePickFlyTo",
								"target": 198,
								"tsLinkText": ""
							},
							{
								"kind": "text",
								"text": " is "
							},
							{
								"kind": "code",
								"text": "````true````"
							},
							{
								"kind": "text",
								"text": ", we can double-click\nor double-tap an "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "Entity"
							},
							{
								"kind": "text",
								"text": " (ie. \"double-picking\") to fit it in view. This will cause the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "Camera"
							},
							{
								"kind": "text",
								"text": " to fly to\nthat Entity. Our target then becomes the center of that Entity.\n\nDisable that behaviour by setting "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "CameraControl#doublePickFlyTo",
								"target": 198,
								"tsLinkText": ""
							},
							{
								"kind": "text",
								"text": " "
							},
							{
								"kind": "code",
								"text": "````false````"
							},
							{
								"kind": "text",
								"text": ".\n\n# Plan-View Mode\n\nIn plan-view mode, "
							},
							{
								"kind": "code",
								"text": "````CameraControl````"
							},
							{
								"kind": "text",
								"text": " pans and rotates the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "Camera"
							},
							{
								"kind": "text",
								"text": ", without rotating it.\n\nTo enable plan-view mode:\n\n"
							},
							{
								"kind": "code",
								"text": "````javascript\ncameraControl.navMode = \"planView\";\n````"
							},
							{
								"kind": "text",
								"text": "\n\nDolly forwards and backwards by:\n\n* spinning the mouse wheel,\n* pinching on the touch pad, and\n* pressing the "
							},
							{
								"kind": "code",
								"text": "````+````"
							},
							{
								"kind": "text",
								"text": " and "
							},
							{
								"kind": "code",
								"text": "````-````"
							},
							{
								"kind": "text",
								"text": " keys.\n\n<br>\nPan left, right, up and down by:\n\n* left-dragging or right-dragging the mouse, and\n* tap-dragging the touch pad with SHIFT down.\n\nPan forwards, backwards, left, right, up and down by pressing the "
							},
							{
								"kind": "code",
								"text": "````WSADZX````"
							},
							{
								"kind": "text",
								"text": " keys on a QWERTY keyboard,\nor "
							},
							{
								"kind": "code",
								"text": "````WSQDWX````"
							},
							{
								"kind": "text",
								"text": " keys on an AZERTY keyboard.\n<br><br>\n\n## Following the Pointer in Plan-View Mode\n\nWhen "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "CameraControl#followPointer",
								"target": 170,
								"tsLinkText": ""
							},
							{
								"kind": "text",
								"text": " is "
							},
							{
								"kind": "code",
								"text": "````true````"
							},
							{
								"kind": "text",
								"text": " in plan-view mode, the mouse or touch pointer will dynamically\nindicate the target to which the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "Camera"
							},
							{
								"kind": "text",
								"text": " will dolly to and from.  In plan-view mode, however, the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "Camera"
							},
							{
								"kind": "text",
								"text": " cannot rotate.\n\nLets ensure that we're in plan-view mode, then enable the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "Camera"
							},
							{
								"kind": "text",
								"text": " to follow the pointer:\n\n"
							},
							{
								"kind": "code",
								"text": "````javascript\ncameraControl.navMode = \"planView\";\ncameraControl.followPointer = true; // Default\n````"
							},
							{
								"kind": "text",
								"text": "\n\nWhen the pointer is over empty space, the target will remain the last object that the pointer was over.\n\n## Axis-Aligned Views in Plan-View Mode\n\nAs in orbit and first-person modes, in plan-view mode we can use keys 1-6 to position the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "Camera"
							},
							{
								"kind": "text",
								"text": " to look at the center of\nthe "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "Scene"
							},
							{
								"kind": "text",
								"text": " from along each of the six World-space axis. Pressing one of these keys will fly the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "Camera"
							},
							{
								"kind": "text",
								"text": " to the\ncorresponding axis-aligned view.\n\n# CameraControl Events\n\n"
							},
							{
								"kind": "code",
								"text": "````CameraControl````"
							},
							{
								"kind": "text",
								"text": " fires events as we interact with "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "Entity"
							},
							{
								"kind": "text",
								"text": "s using mouse or touch input.\n\nThe following examples demonstrate how to subscribe to those events.\n\nThe first example shows how to save a handle to a subscription, which we can later use to unsubscribe.\n\n## \"hover\"\n\nEvent fired when the pointer moves while hovering over an Entity.\n\n"
							},
							{
								"kind": "code",
								"text": "````javascript\nconst onHover = cameraControl.on(\"hover\", (e) => {\n     const entity = e.entity; // Entity\n     const canvasPos = e.canvasPos; // 2D canvas position\n});\n````"
							},
							{
								"kind": "text",
								"text": "\n\nTo unsubscribe from the event:\n\n"
							},
							{
								"kind": "code",
								"text": "````javascript\ncameraControl.off(onHover);\n````"
							},
							{
								"kind": "text",
								"text": "\n\n## \"hoverOff\"\n\nEvent fired when the pointer moves while hovering over empty space.\n\n"
							},
							{
								"kind": "code",
								"text": "````javascript\ncameraControl.on(\"hoverOff\", (e) => {\n     const canvasPos = e.canvasPos;\n});\n````"
							},
							{
								"kind": "text",
								"text": "\n\n## \"hoverEnter\"\n\nEvent fired when the pointer moves onto an Entity.\n\n"
							},
							{
								"kind": "code",
								"text": "````javascript\ncameraControl.on(\"hoverEnter\", (e) => {\n     const entity = e.entity;\n     const canvasPos = e.canvasPos;\n});\n````"
							},
							{
								"kind": "text",
								"text": "\n\n## \"hoverOut\"\n\nEvent fired when the pointer moves off an Entity.\n\n"
							},
							{
								"kind": "code",
								"text": "````javascript\ncameraControl.on(\"hoverOut\", (e) => {\n     const entity = e.entity;\n     const canvasPos = e.canvasPos;\n});\n````"
							},
							{
								"kind": "text",
								"text": "\n\n## \"picked\"\n\nEvent fired when we left-click or tap on an Entity.\n\n"
							},
							{
								"kind": "code",
								"text": "````javascript\ncameraControl.on(\"picked\", (e) => {\n     const entity = e.entity;\n     const canvasPos = e.canvasPos;\n});\n````"
							},
							{
								"kind": "text",
								"text": "\n\n## \"pickedSurface\"\n\nEvent fired when we left-click or tap on the surface of an Entity.\n\n"
							},
							{
								"kind": "code",
								"text": "````javascript\ncameraControl.on(\"picked\", (e) => {\n     const entity = e.entity;\n     const canvasPos = e.canvasPos;\n     const worldPos = e.worldPos; // 3D World-space position\n     const viewPos = e.viewPos; // 3D View-space position\n     const worldNormal = e.worldNormal; // 3D World-space normal vector\n});\n````"
							},
							{
								"kind": "text",
								"text": "\n\n## \"pickedNothing\"\n\nEvent fired when we left-click or tap on empty space.\n\n"
							},
							{
								"kind": "code",
								"text": "````javascript\ncameraControl.on(\"pickedNothing\", (e) => {\n     const canvasPos = e.canvasPos;\n});\n````"
							},
							{
								"kind": "text",
								"text": "\n\n## \"doublePicked\"\n\nEvent fired wwhen we left-double-click or double-tap on an Entity.\n\n"
							},
							{
								"kind": "code",
								"text": "````javascript\ncameraControl.on(\"doublePicked\", (e) => {\n     const entity = e.entity;\n     const canvasPos = e.canvasPos;\n});\n````"
							},
							{
								"kind": "text",
								"text": "\n\n## \"doublePickedSurface\"\n\nEvent fired when we left-double-click or double-tap on the surface of an Entity.\n\n"
							},
							{
								"kind": "code",
								"text": "````javascript\ncameraControl.on(\"doublePickedSurface\", (e) => {\n     const entity = e.entity;\n     const canvasPos = e.canvasPos;\n     const worldPos = e.worldPos;\n     const viewPos = e.viewPos;\n     const worldNormal = e.worldNormal;\n});\n````"
							},
							{
								"kind": "text",
								"text": "\n\n## \"doublePickedNothing\"\n\nEvent fired when we left-double-click or double-tap on empty space.\n\n"
							},
							{
								"kind": "code",
								"text": "````javascript\ncameraControl.on(\"doublePickedNothing\", (e) => {\n     const canvasPos = e.canvasPos;\n});\n````"
							},
							{
								"kind": "text",
								"text": "\n\n## \"rightClick\"\n\nEvent fired when we right-click on the canvas.\n\n"
							},
							{
								"kind": "code",
								"text": "````javascript\ncameraControl.on(\"rightClick\", (e) => {\n     const event = e.event; // Mouse event\n     const canvasPos = e.canvasPos;\n});\n````"
							},
							{
								"kind": "text",
								"text": "\n\n## Custom Keyboard Mappings\n\nWe can customize"
							},
							{
								"kind": "code",
								"text": "````CameraControl````"
							},
							{
								"kind": "text",
								"text": " key bindings as shown below.\n\nIn this example, we'll just set the default bindings for a QWERTY keyboard.\n\n"
							},
							{
								"kind": "code",
								"text": "````javascript\nconst input = myViewer.view.input;\n\ncameraControl.navMode = OrbitNavigationMode;\ncameraControl.followPointer = true;\n\nconst keyMap = {};\n\nkeyMap[cameraControl.PAN_LEFT] = [KEY_A];\nkeyMap[cameraControl.PAN_RIGHT] = [KEY_D];\nkeyMap[cameraControl.PAN_UP] = [KEY_Z];\nkeyMap[cameraControl.PAN_DOWN] = [KEY_X];\nkeyMap[cameraControl.DOLLY_FORWARDS] = [KEY_W, KEY_ADD];\nkeyMap[cameraControl.DOLLY_BACKWARDS] = [KEY_S, KEY_SUBTRACT];\nkeyMap[cameraControl.ROTATE_X_POS] = [KEY_DOWN_ARROW];\nkeyMap[cameraControl.ROTATE_X_NEG] = [KEY_UP_ARROW];\nkeyMap[cameraControl.ROTATE_Y_POS] = [KEY_LEFT_ARROW];\nkeyMap[cameraControl.ROTATE_Y_NEG] = [KEY_RIGHT_ARROW];\nkeyMap[cameraControl.AXIS_VIEW_RIGHT] = [KEY_NUM_1];\nkeyMap[cameraControl.AXIS_VIEW_BACK] = [KEY_NUM_2];\nkeyMap[cameraControl.AXIS_VIEW_LEFT] = [KEY_NUM_3];\nkeyMap[cameraControl.AXIS_VIEW_FRONT] = [KEY_NUM_4];\nkeyMap[cameraControl.AXIS_VIEW_TOP] = [KEY_NUM_5];\nkeyMap[cameraControl.AXIS_VIEW_BOTTOM] = [KEY_NUM_6];\n\ncameraControl.keyMap = keyMap;\n````"
							},
							{
								"kind": "text",
								"text": "\n\nWe can also just configure default bindings for a specified keyboard layout, like this:\n\n"
							},
							{
								"kind": "code",
								"text": "````javascript\ncameraControl.keyMap = \"qwerty\";\n````"
							},
							{
								"kind": "text",
								"text": "\n\nThen, "
							},
							{
								"kind": "code",
								"text": "````CameraControl````"
							},
							{
								"kind": "text",
								"text": " will internally set "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "CameraControl#keyMap",
								"target": 129,
								"tsLinkText": ""
							},
							{
								"kind": "text",
								"text": " to the default key map for the QWERTY\nlayout (which is the same set of mappings we set in the previous example). In other words, if we subsequently\nread "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "CameraControl#keyMap",
								"target": 129,
								"tsLinkText": ""
							},
							{
								"kind": "text",
								"text": ", it will now be a key map, instead of the \"qwerty\" string value we set it to.\n\nSupported layouts are, so far:\n\n* "
							},
							{
								"kind": "code",
								"text": "````\"qwerty\"````"
							},
							{
								"kind": "text",
								"text": "\n* "
							},
							{
								"kind": "code",
								"text": "````\"azerty\"````"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 280,
					"name": "destroyed",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "True once this Component has been destroyed.\n\nDon't use this Component if this is "
							},
							{
								"kind": "code",
								"text": "````true````"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "core/dist/Component.d.ts",
							"line": 22,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Component.destroyed"
					}
				},
				{
					"id": 281,
					"name": "dirty",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "core/dist/Component.d.ts",
							"line": 23,
							"character": 14
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Component.dirty"
					}
				},
				{
					"id": 279,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Unique ID of this Component."
							}
						]
					},
					"sources": [
						{
							"fileName": "core/dist/Component.d.ts",
							"line": 16,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Component.id"
					}
				},
				{
					"id": 282,
					"name": "onDestroyed",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Emits an event when the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "@xeokit/core!Component"
							},
							{
								"kind": "text",
								"text": " has been destroyed."
							}
						]
					},
					"sources": [
						{
							"fileName": "core/dist/Component.d.ts",
							"line": 29,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../core/src/EventEmitter.ts",
							"qualifiedName": "EventEmitter"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../core/src/Component.ts",
									"qualifiedName": "Component"
								},
								"name": "Component",
								"package": "@xeokit/core"
							},
							{
								"type": "literal",
								"value": null
							}
						],
						"name": "EventEmitter",
						"package": "@xeokit/core"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Component.onDestroyed"
					}
				},
				{
					"id": 57,
					"name": "onDoublePicked",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Event fired when a ViewObject is double-picked."
							}
						]
					},
					"sources": [
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 740,
							"character": 13,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L740"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../core/src/EventEmitter.ts",
							"qualifiedName": "EventEmitter"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 24,
								"name": "CameraControl",
								"package": "@xeokit/cameracontrol"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../viewer/src/PickResult.ts",
									"qualifiedName": "PickResult"
								},
								"name": "PickResult",
								"package": "@xeokit/viewer"
							}
						],
						"name": "EventEmitter",
						"package": "@xeokit/core"
					}
				},
				{
					"id": 59,
					"name": "onDoublePickedNothing",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Event fired when empty space is double-picked."
							}
						]
					},
					"sources": [
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 754,
							"character": 13,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L754"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../core/src/EventEmitter.ts",
							"qualifiedName": "EventEmitter"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 24,
								"name": "CameraControl",
								"package": "@xeokit/cameracontrol"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../viewer/src/PickResult.ts",
									"qualifiedName": "PickResult"
								},
								"name": "PickResult",
								"package": "@xeokit/viewer"
							}
						],
						"name": "EventEmitter",
						"package": "@xeokit/core"
					}
				},
				{
					"id": 58,
					"name": "onDoublePickedSurface",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Event fired when a surface is double-picked."
							}
						]
					},
					"sources": [
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 747,
							"character": 13,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L747"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../core/src/EventEmitter.ts",
							"qualifiedName": "EventEmitter"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 24,
								"name": "CameraControl",
								"package": "@xeokit/cameracontrol"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../viewer/src/PickResult.ts",
									"qualifiedName": "PickResult"
								},
								"name": "PickResult",
								"package": "@xeokit/viewer"
							}
						],
						"name": "EventEmitter",
						"package": "@xeokit/core"
					}
				},
				{
					"id": 49,
					"name": "onHover",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Event fired when the pointer moves while over a "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "@xeokit/viewer!ViewObject"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 684,
							"character": 13,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L684"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../core/src/EventEmitter.ts",
							"qualifiedName": "EventEmitter"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 24,
								"name": "CameraControl",
								"package": "@xeokit/cameracontrol"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "src/CameraControl.ts",
									"qualifiedName": "HoverEvent"
								},
								"name": "HoverEvent",
								"package": "@xeokit/cameracontrol"
							}
						],
						"name": "EventEmitter",
						"package": "@xeokit/core"
					}
				},
				{
					"id": 52,
					"name": "onHoverEnter",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Event fired when the pointer moves onto a "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "@xeokit/viewer!ViewObject"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 705,
							"character": 13,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L705"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../core/src/EventEmitter.ts",
							"qualifiedName": "EventEmitter"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 24,
								"name": "CameraControl",
								"package": "@xeokit/cameracontrol"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "src/CameraControl.ts",
									"qualifiedName": "HoverEvent"
								},
								"name": "HoverEvent",
								"package": "@xeokit/cameracontrol"
							}
						],
						"name": "EventEmitter",
						"package": "@xeokit/core"
					}
				},
				{
					"id": 51,
					"name": "onHoverOff",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Event fired when the pointer moves while over empty space."
							}
						]
					},
					"sources": [
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 698,
							"character": 13,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L698"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../core/src/EventEmitter.ts",
							"qualifiedName": "EventEmitter"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 24,
								"name": "CameraControl",
								"package": "@xeokit/cameracontrol"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "src/CameraControl.ts",
									"qualifiedName": "HoverEvent"
								},
								"name": "HoverEvent",
								"package": "@xeokit/cameracontrol"
							}
						],
						"name": "EventEmitter",
						"package": "@xeokit/core"
					}
				},
				{
					"id": 53,
					"name": "onHoverOut",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Event fired when the pointer moves off a "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "@xeokit/viewer!ViewObject"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 712,
							"character": 13,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L712"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../core/src/EventEmitter.ts",
							"qualifiedName": "EventEmitter"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 24,
								"name": "CameraControl",
								"package": "@xeokit/cameracontrol"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "src/CameraControl.ts",
									"qualifiedName": "HoverEvent"
								},
								"name": "HoverEvent",
								"package": "@xeokit/cameracontrol"
							}
						],
						"name": "EventEmitter",
						"package": "@xeokit/core"
					}
				},
				{
					"id": 61,
					"name": "onHoverSnapOrSurface",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Event fired when snapping onto a surface, vertex, or edge."
							}
						]
					},
					"sources": [
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 768,
							"character": 13,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L768"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../core/src/EventEmitter.ts",
							"qualifiedName": "EventEmitter"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 24,
								"name": "CameraControl",
								"package": "@xeokit/cameracontrol"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "EventEmitter",
						"package": "@xeokit/core"
					}
				},
				{
					"id": 60,
					"name": "onHoverSnapOrSurfaceOff",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Event fired when snapping off a surface, vertex, or edge."
							}
						]
					},
					"sources": [
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 761,
							"character": 13,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L761"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../core/src/EventEmitter.ts",
							"qualifiedName": "EventEmitter"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 24,
								"name": "CameraControl",
								"package": "@xeokit/cameracontrol"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "EventEmitter",
						"package": "@xeokit/core"
					}
				},
				{
					"id": 50,
					"name": "onHoverSurface",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Event fired when the pointer moves while over a "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "@xeokit/viewer!ViewObject"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 691,
							"character": 13,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L691"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../core/src/EventEmitter.ts",
							"qualifiedName": "EventEmitter"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 24,
								"name": "CameraControl",
								"package": "@xeokit/cameracontrol"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "src/CameraControl.ts",
									"qualifiedName": "HoverEvent"
								},
								"name": "HoverEvent",
								"package": "@xeokit/cameracontrol"
							}
						],
						"name": "EventEmitter",
						"package": "@xeokit/core"
					}
				},
				{
					"id": 54,
					"name": "onPicked",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Event fired when a "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "@xeokit/viewer!ViewObject"
							},
							{
								"kind": "text",
								"text": " is picked."
							}
						]
					},
					"sources": [
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 719,
							"character": 13,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L719"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../core/src/EventEmitter.ts",
							"qualifiedName": "EventEmitter"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 24,
								"name": "CameraControl",
								"package": "@xeokit/cameracontrol"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../viewer/src/PickResult.ts",
									"qualifiedName": "PickResult"
								},
								"name": "PickResult",
								"package": "@xeokit/viewer"
							}
						],
						"name": "EventEmitter",
						"package": "@xeokit/core"
					}
				},
				{
					"id": 56,
					"name": "onPickedNothing",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Event fired when empty space is picked."
							}
						]
					},
					"sources": [
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 733,
							"character": 13,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L733"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../core/src/EventEmitter.ts",
							"qualifiedName": "EventEmitter"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 24,
								"name": "CameraControl",
								"package": "@xeokit/cameracontrol"
							},
							{
								"type": "literal",
								"value": null
							}
						],
						"name": "EventEmitter",
						"package": "@xeokit/core"
					}
				},
				{
					"id": 55,
					"name": "onPickedSurface",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Event fired when empty space is picked."
							}
						]
					},
					"sources": [
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 726,
							"character": 13,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L726"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../core/src/EventEmitter.ts",
							"qualifiedName": "EventEmitter"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 24,
								"name": "CameraControl",
								"package": "@xeokit/cameracontrol"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../viewer/src/PickResult.ts",
									"qualifiedName": "PickResult"
								},
								"name": "PickResult",
								"package": "@xeokit/viewer"
							}
						],
						"name": "EventEmitter",
						"package": "@xeokit/core"
					}
				},
				{
					"id": 62,
					"name": "onRayMove",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Event fired when ray moves."
							}
						]
					},
					"sources": [
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 775,
							"character": 13,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L775"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../core/src/EventEmitter.ts",
							"qualifiedName": "EventEmitter"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 24,
								"name": "CameraControl",
								"package": "@xeokit/cameracontrol"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "EventEmitter",
						"package": "@xeokit/core"
					}
				},
				{
					"id": 48,
					"name": "onRightClick",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Event fired when we right-click."
							}
						]
					},
					"sources": [
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 677,
							"character": 13,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L677"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../core/src/EventEmitter.ts",
							"qualifiedName": "EventEmitter"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 24,
								"name": "CameraControl",
								"package": "@xeokit/cameracontrol"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "EventEmitter",
						"package": "@xeokit/core"
					}
				},
				{
					"id": 47,
					"name": "view",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 669,
							"character": 4,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L669"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../viewer/src/View.ts",
							"qualifiedName": "View"
						},
						"name": "View",
						"package": "@xeokit/viewer"
					}
				},
				{
					"id": 38,
					"name": "AXIS_VIEW_BACK",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Identifies the XX action."
							}
						],
						"blockTags": [
							{
								"tag": "@final",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 639,
							"character": 11,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L639"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "13"
				},
				{
					"id": 42,
					"name": "AXIS_VIEW_BOTTOM",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Identifies the XX action."
							}
						],
						"blockTags": [
							{
								"tag": "@final",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 667,
							"character": 11,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L667"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "17"
				},
				{
					"id": 40,
					"name": "AXIS_VIEW_FRONT",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Identifies the XX action."
							}
						],
						"blockTags": [
							{
								"tag": "@final",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 653,
							"character": 11,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L653"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "15"
				},
				{
					"id": 39,
					"name": "AXIS_VIEW_LEFT",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Identifies the XX action."
							}
						],
						"blockTags": [
							{
								"tag": "@final",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 646,
							"character": 11,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L646"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "14"
				},
				{
					"id": 37,
					"name": "AXIS_VIEW_RIGHT",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Identifies the XX action."
							}
						],
						"blockTags": [
							{
								"tag": "@final",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 632,
							"character": 11,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L632"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "12"
				},
				{
					"id": 41,
					"name": "AXIS_VIEW_TOP",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Identifies the XX action."
							}
						],
						"blockTags": [
							{
								"tag": "@final",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 660,
							"character": 11,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L660"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "16"
				},
				{
					"id": 36,
					"name": "DOLLY_BACKWARDS",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Identifies the XX action."
							}
						],
						"blockTags": [
							{
								"tag": "@final",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 625,
							"character": 11,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L625"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "11"
				},
				{
					"id": 35,
					"name": "DOLLY_FORWARDS",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Identifies the XX action."
							}
						],
						"blockTags": [
							{
								"tag": "@final",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 618,
							"character": 11,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L618"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "10"
				},
				{
					"id": 30,
					"name": "PAN_BACKWARDS",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Identifies the XX action."
							}
						],
						"blockTags": [
							{
								"tag": "@final",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 583,
							"character": 11,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L583"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "5"
				},
				{
					"id": 28,
					"name": "PAN_DOWN",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Identifies the XX action."
							}
						],
						"blockTags": [
							{
								"tag": "@final",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 569,
							"character": 11,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L569"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "3"
				},
				{
					"id": 29,
					"name": "PAN_FORWARDS",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Identifies the XX action."
							}
						],
						"blockTags": [
							{
								"tag": "@final",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 576,
							"character": 11,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L576"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "4"
				},
				{
					"id": 25,
					"name": "PAN_LEFT",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Identifies the XX action."
							}
						],
						"blockTags": [
							{
								"tag": "@final",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 548,
							"character": 11,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L548"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0"
				},
				{
					"id": 26,
					"name": "PAN_RIGHT",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Identifies the XX action."
							}
						],
						"blockTags": [
							{
								"tag": "@final",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 555,
							"character": 11,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L555"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "1"
				},
				{
					"id": 27,
					"name": "PAN_UP",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Identifies the XX action."
							}
						],
						"blockTags": [
							{
								"tag": "@final",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 562,
							"character": 11,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L562"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "2"
				},
				{
					"id": 32,
					"name": "ROTATE_X_NEG",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Identifies the XX action."
							}
						],
						"blockTags": [
							{
								"tag": "@final",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 597,
							"character": 11,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L597"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "7"
				},
				{
					"id": 31,
					"name": "ROTATE_X_POS",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Identifies the XX action."
							}
						],
						"blockTags": [
							{
								"tag": "@final",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 590,
							"character": 11,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L590"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "6"
				},
				{
					"id": 34,
					"name": "ROTATE_Y_NEG",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Identifies the XX action."
							}
						],
						"blockTags": [
							{
								"tag": "@final",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 611,
							"character": 11,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L611"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "9"
				},
				{
					"id": 33,
					"name": "ROTATE_Y_POS",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Identifies the XX action."
							}
						],
						"blockTags": [
							{
								"tag": "@final",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 604,
							"character": 11,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L604"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "8"
				},
				{
					"id": 140,
					"name": "active",
					"variant": "declaration",
					"kind": 262144,
					"flags": {},
					"sources": [
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 1145,
							"character": 8,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1145"
						},
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 1161,
							"character": 8,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1161"
						}
					],
					"getSignature": {
						"id": 141,
						"name": "active",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Gets if this "
								},
								{
									"kind": "code",
									"text": "````CameraControl````"
								},
								{
									"kind": "text",
									"text": " is active or not.\n\nWhen inactive, the "
								},
								{
									"kind": "code",
									"text": "````CameraControl````"
								},
								{
									"kind": "text",
									"text": " will not react to input.\n\nDefault is "
								},
								{
									"kind": "code",
									"text": "````true````"
								},
								{
									"kind": "text",
									"text": "."
								}
							],
							"blockTags": [
								{
									"tag": "@returns",
									"content": [
										{
											"kind": "text",
											"text": "Returns "
										},
										{
											"kind": "code",
											"text": "````true````"
										},
										{
											"kind": "text",
											"text": " if this "
										},
										{
											"kind": "code",
											"text": "````CameraControl````"
										},
										{
											"kind": "text",
											"text": " is active."
										}
									]
								}
							]
						},
						"sources": [
							{
								"fileName": "cameracontrol/src/CameraControl.ts",
								"line": 1161,
								"character": 8,
								"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1161"
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "boolean"
						}
					},
					"setSignature": {
						"id": 142,
						"name": "active",
						"variant": "signature",
						"kind": 1048576,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Sets if this "
								},
								{
									"kind": "code",
									"text": "````CameraControl````"
								},
								{
									"kind": "text",
									"text": " is active or not.\n\nWhen inactive, the "
								},
								{
									"kind": "code",
									"text": "````CameraControl````"
								},
								{
									"kind": "text",
									"text": " will not react to input.\n\nDefault is "
								},
								{
									"kind": "code",
									"text": "````true````"
								},
								{
									"kind": "text",
									"text": "."
								}
							]
						},
						"sources": [
							{
								"fileName": "cameracontrol/src/CameraControl.ts",
								"line": 1145,
								"character": 8,
								"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1145"
							}
						],
						"parameters": [
							{
								"id": 143,
								"name": "value",
								"variant": "param",
								"kind": 32768,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "Set "
										},
										{
											"kind": "code",
											"text": "````true````"
										},
										{
											"kind": "text",
											"text": " to activate this "
										},
										{
											"kind": "code",
											"text": "````CameraControl````"
										},
										{
											"kind": "text",
											"text": "."
										}
									]
								},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						}
					}
				},
				{
					"id": 194,
					"name": "constrainVertical",
					"variant": "declaration",
					"kind": 262144,
					"flags": {},
					"sources": [
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 1512,
							"character": 8,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1512"
						},
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 1527,
							"character": 8,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1527"
						}
					],
					"getSignature": {
						"id": 195,
						"name": "constrainVertical",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Gets whether to vertically constrain the "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "Camera"
								},
								{
									"kind": "text",
									"text": " position for first-person navigation.\n\nWhen set "
								},
								{
									"kind": "code",
									"text": "````true````"
								},
								{
									"kind": "text",
									"text": ", this constrains "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "Camera#eye"
								},
								{
									"kind": "text",
									"text": " to its current vertical position.\n\nOnly applies when "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "CameraControl#navMode",
									"target": 160,
									"tsLinkText": ""
								},
								{
									"kind": "text",
									"text": " is "
								},
								{
									"kind": "code",
									"text": "````\"firstPerson\"````"
								},
								{
									"kind": "text",
									"text": ".\n\nDefault is "
								},
								{
									"kind": "code",
									"text": "````false````"
								},
								{
									"kind": "text",
									"text": "."
								}
							],
							"blockTags": [
								{
									"tag": "@returns",
									"content": [
										{
											"kind": "code",
											"text": "````true````"
										},
										{
											"kind": "text",
											"text": " when Camera is vertically constrained."
										}
									]
								}
							]
						},
						"sources": [
							{
								"fileName": "cameracontrol/src/CameraControl.ts",
								"line": 1527,
								"character": 8,
								"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1527"
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "boolean"
						}
					},
					"setSignature": {
						"id": 196,
						"name": "constrainVertical",
						"variant": "signature",
						"kind": 1048576,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Sets whether to vertically constrain the "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "Camera"
								},
								{
									"kind": "text",
									"text": " position for first-person navigation.\n\nWhen set "
								},
								{
									"kind": "code",
									"text": "````true````"
								},
								{
									"kind": "text",
									"text": ", this constrains "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "Camera#eye"
								},
								{
									"kind": "text",
									"text": " to its current vertical position.\n\nOnly applies when "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "CameraControl#navMode",
									"target": 160,
									"tsLinkText": ""
								},
								{
									"kind": "text",
									"text": " is "
								},
								{
									"kind": "code",
									"text": "````\"firstPerson\"````"
								},
								{
									"kind": "text",
									"text": ".\n\nDefault is "
								},
								{
									"kind": "code",
									"text": "````false````"
								},
								{
									"kind": "text",
									"text": "."
								}
							]
						},
						"sources": [
							{
								"fileName": "cameracontrol/src/CameraControl.ts",
								"line": 1512,
								"character": 8,
								"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1512"
							}
						],
						"parameters": [
							{
								"id": 197,
								"name": "value",
								"variant": "param",
								"kind": 32768,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "Set "
										},
										{
											"kind": "code",
											"text": "````true````"
										},
										{
											"kind": "text",
											"text": " to vertically constrain the Camera."
										}
									]
								},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						}
					}
				},
				{
					"id": 238,
					"name": "dollyInertia",
					"variant": "declaration",
					"kind": 262144,
					"flags": {},
					"sources": [
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 1799,
							"character": 8,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1799"
						},
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 1810,
							"character": 8,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1810"
						}
					],
					"getSignature": {
						"id": 239,
						"name": "dollyInertia",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Gets the dolly inertia factor.\n\nDefault is "
								},
								{
									"kind": "code",
									"text": "````0````"
								},
								{
									"kind": "text",
									"text": "."
								}
							],
							"blockTags": [
								{
									"tag": "@returns",
									"content": [
										{
											"kind": "text",
											"text": "The current dolly inertia factor."
										}
									]
								}
							]
						},
						"sources": [
							{
								"fileName": "cameracontrol/src/CameraControl.ts",
								"line": 1810,
								"character": 8,
								"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1810"
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "number"
						}
					},
					"setSignature": {
						"id": 240,
						"name": "dollyInertia",
						"variant": "signature",
						"kind": 1048576,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Sets the dolly inertia factor.\n\nThis factor configures how much the "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "Camera"
								},
								{
									"kind": "text",
									"text": " keeps moving after you finish dollying it.\n\nThis factor is a value in range "
								},
								{
									"kind": "code",
									"text": "````[0..1]````"
								},
								{
									"kind": "text",
									"text": ". A value of "
								},
								{
									"kind": "code",
									"text": "````0.0````"
								},
								{
									"kind": "text",
									"text": " causes dollying to immediately stop,\n"
								},
								{
									"kind": "code",
									"text": "````0.5````"
								},
								{
									"kind": "text",
									"text": " causes dollying to decay 50% on each animation frame, while "
								},
								{
									"kind": "code",
									"text": "````1.0````"
								},
								{
									"kind": "text",
									"text": " causes no decay, which allows dollying\nto continue until further input stops it.\n\nYou might set "
								},
								{
									"kind": "code",
									"text": "````dollyInertia````"
								},
								{
									"kind": "text",
									"text": " to zero when you want be able to precisely position or rotate the Camera,\nwithout interference from inertia. This also means that xeokit renders less frames while dollying the Camera,\nwhich can improve rendering performance.\n\nDefault is "
								},
								{
									"kind": "code",
									"text": "````0````"
								},
								{
									"kind": "text",
									"text": "."
								}
							]
						},
						"sources": [
							{
								"fileName": "cameracontrol/src/CameraControl.ts",
								"line": 1799,
								"character": 8,
								"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1799"
							}
						],
						"parameters": [
							{
								"id": 241,
								"name": "dollyInertia",
								"variant": "param",
								"kind": 32768,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "New dolly inertia factor."
										}
									]
								},
								"type": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						}
					}
				},
				{
					"id": 246,
					"name": "dollyMinSpeed",
					"variant": "declaration",
					"kind": 262144,
					"flags": {},
					"sources": [
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 1843,
							"character": 8,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1843"
						},
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 1854,
							"character": 8,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1854"
						}
					],
					"getSignature": {
						"id": 247,
						"name": "dollyMinSpeed",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Gets the minimum dolly speed.\n\nDefault is "
								},
								{
									"kind": "code",
									"text": "````0.04````"
								},
								{
									"kind": "text",
									"text": "."
								}
							],
							"blockTags": [
								{
									"tag": "@returns",
									"content": [
										{
											"kind": "text",
											"text": "The current minimum dolly speed."
										}
									]
								}
							]
						},
						"sources": [
							{
								"fileName": "cameracontrol/src/CameraControl.ts",
								"line": 1854,
								"character": 8,
								"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1854"
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "number"
						}
					},
					"setSignature": {
						"id": 248,
						"name": "dollyMinSpeed",
						"variant": "signature",
						"kind": 1048576,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Sets the minimum dolly speed.\n\nDefault is "
								},
								{
									"kind": "code",
									"text": "````0.04````"
								},
								{
									"kind": "text",
									"text": "."
								}
							]
						},
						"sources": [
							{
								"fileName": "cameracontrol/src/CameraControl.ts",
								"line": 1843,
								"character": 8,
								"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1843"
							}
						],
						"parameters": [
							{
								"id": 249,
								"name": "dollyMinSpeed",
								"variant": "param",
								"kind": 32768,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "New dolly minimum speed."
										}
									]
								},
								"type": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						}
					}
				},
				{
					"id": 242,
					"name": "dollyProximityThreshold",
					"variant": "declaration",
					"kind": 262144,
					"flags": {},
					"sources": [
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 1821,
							"character": 8,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1821"
						},
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 1832,
							"character": 8,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1832"
						}
					],
					"getSignature": {
						"id": 243,
						"name": "dollyProximityThreshold",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Gets the proximity to the closest object below which dolly speed decreases, and above which dolly speed increases.\n\nDefault is "
								},
								{
									"kind": "code",
									"text": "````35.0````"
								},
								{
									"kind": "text",
									"text": "."
								}
							],
							"blockTags": [
								{
									"tag": "@returns",
									"content": [
										{
											"kind": "text",
											"text": "The current dolly proximity threshold."
										}
									]
								}
							]
						},
						"sources": [
							{
								"fileName": "cameracontrol/src/CameraControl.ts",
								"line": 1832,
								"character": 8,
								"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1832"
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "number"
						}
					},
					"setSignature": {
						"id": 244,
						"name": "dollyProximityThreshold",
						"variant": "signature",
						"kind": 1048576,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Sets the proximity to the closest object below which dolly speed decreases, and above which dolly speed increases.\n\nDefault is "
								},
								{
									"kind": "code",
									"text": "````35.0````"
								},
								{
									"kind": "text",
									"text": "."
								}
							]
						},
						"sources": [
							{
								"fileName": "cameracontrol/src/CameraControl.ts",
								"line": 1821,
								"character": 8,
								"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1821"
							}
						],
						"parameters": [
							{
								"id": 245,
								"name": "dollyProximityThreshold",
								"variant": "param",
								"kind": 32768,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "New dolly proximity threshold."
										}
									]
								},
								"type": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						}
					}
				},
				{
					"id": 178,
					"name": "dollyToPointer",
					"variant": "declaration",
					"kind": 262144,
					"flags": {},
					"sources": [
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 1392,
							"character": 8,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1392"
						},
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 1401,
							"character": 8,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1401"
						}
					],
					"getSignature": {
						"id": 179,
						"name": "dollyToPointer",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"comment": {
							"summary": [],
							"blockTags": [
								{
									"tag": "@deprecated",
									"content": []
								},
								{
									"tag": "@returns",
									"content": [
										{
											"kind": "text",
											"text": "Returns "
										},
										{
											"kind": "code",
											"text": "````true````"
										},
										{
											"kind": "text",
											"text": " if dolly-to-pointer behaviour is enabled."
										}
									]
								}
							]
						},
						"sources": [
							{
								"fileName": "cameracontrol/src/CameraControl.ts",
								"line": 1401,
								"character": 8,
								"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1401"
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "boolean"
						}
					},
					"setSignature": {
						"id": 180,
						"name": "dollyToPointer",
						"variant": "signature",
						"kind": 1048576,
						"flags": {},
						"comment": {
							"summary": [],
							"blockTags": [
								{
									"tag": "@deprecated",
									"content": []
								}
							]
						},
						"sources": [
							{
								"fileName": "cameracontrol/src/CameraControl.ts",
								"line": 1392,
								"character": 8,
								"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1392"
							}
						],
						"parameters": [
							{
								"id": 181,
								"name": "value",
								"variant": "param",
								"kind": 32768,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "Set "
										},
										{
											"kind": "code",
											"text": "````true````"
										},
										{
											"kind": "text",
											"text": " to enable dolly-to-pointer behaviour."
										}
									]
								},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						}
					}
				},
				{
					"id": 268,
					"name": "doubleClickTimeFrame",
					"variant": "declaration",
					"kind": 262144,
					"flags": {},
					"sources": [
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 1987,
							"character": 8,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1987"
						},
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 1998,
							"character": 8,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1998"
						}
					],
					"getSignature": {
						"id": 269,
						"name": "doubleClickTimeFrame",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Gets the double click time frame length in milliseconds.\n\nDefault is "
								},
								{
									"kind": "code",
									"text": "````250````"
								}
							]
						},
						"sources": [
							{
								"fileName": "cameracontrol/src/CameraControl.ts",
								"line": 1998,
								"character": 8,
								"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1998"
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "number"
						}
					},
					"setSignature": {
						"id": 270,
						"name": "doubleClickTimeFrame",
						"variant": "signature",
						"kind": 1048576,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Sets the double click time frame length in milliseconds.\n\nIf two mouse click events occur within this time frame, it is considered a double click.\n\nDefault is "
								},
								{
									"kind": "code",
									"text": "````250````"
								}
							]
						},
						"sources": [
							{
								"fileName": "cameracontrol/src/CameraControl.ts",
								"line": 1987,
								"character": 8,
								"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1987"
							}
						],
						"parameters": [
							{
								"id": 271,
								"name": "value",
								"variant": "param",
								"kind": 32768,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "New double click time frame."
										}
									]
								},
								"type": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						}
					}
				},
				{
					"id": 198,
					"name": "doublePickFlyTo",
					"variant": "declaration",
					"kind": 262144,
					"flags": {},
					"sources": [
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 1538,
							"character": 8,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1538"
						},
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 1549,
							"character": 8,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1549"
						}
					],
					"getSignature": {
						"id": 199,
						"name": "doublePickFlyTo",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Gets whether double-picking an "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "Entity"
								},
								{
									"kind": "text",
									"text": " causes the "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "Camera"
								},
								{
									"kind": "text",
									"text": " to fly to its boundary.\n\nDefault is "
								},
								{
									"kind": "code",
									"text": "````false````"
								},
								{
									"kind": "text",
									"text": "."
								}
							],
							"blockTags": [
								{
									"tag": "@returns",
									"content": [
										{
											"kind": "text",
											"text": "Returns "
										},
										{
											"kind": "code",
											"text": "````true````"
										},
										{
											"kind": "text",
											"text": " when double-pick-fly-to mode is enabled."
										}
									]
								}
							]
						},
						"sources": [
							{
								"fileName": "cameracontrol/src/CameraControl.ts",
								"line": 1549,
								"character": 8,
								"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1549"
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "boolean"
						}
					},
					"setSignature": {
						"id": 200,
						"name": "doublePickFlyTo",
						"variant": "signature",
						"kind": 1048576,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Sets whether double-picking an "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "Entity"
								},
								{
									"kind": "text",
									"text": " causes the "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "Camera"
								},
								{
									"kind": "text",
									"text": " to fly to its boundary.\n\nDefault is "
								},
								{
									"kind": "code",
									"text": "````false````"
								},
								{
									"kind": "text",
									"text": "."
								}
							]
						},
						"sources": [
							{
								"fileName": "cameracontrol/src/CameraControl.ts",
								"line": 1538,
								"character": 8,
								"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1538"
							}
						],
						"parameters": [
							{
								"id": 201,
								"name": "value",
								"variant": "param",
								"kind": 32768,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "Set "
										},
										{
											"kind": "code",
											"text": "````true````"
										},
										{
											"kind": "text",
											"text": " to enable double-pick-fly-to mode."
										}
									]
								},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						}
					}
				},
				{
					"id": 222,
					"name": "dragRotationRate",
					"variant": "declaration",
					"kind": 262144,
					"flags": {},
					"sources": [
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 1699,
							"character": 8,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1699"
						},
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 1710,
							"character": 8,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1710"
						}
					],
					"getSignature": {
						"id": 223,
						"name": "dragRotationRate",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Gets the current drag rotation rate.\n\nDefault is "
								},
								{
									"kind": "code",
									"text": "````360.0````"
								},
								{
									"kind": "text",
									"text": "."
								}
							],
							"blockTags": [
								{
									"tag": "@returns",
									"content": [
										{
											"kind": "text",
											"text": "The current drag rotation rate."
										}
									]
								}
							]
						},
						"sources": [
							{
								"fileName": "cameracontrol/src/CameraControl.ts",
								"line": 1710,
								"character": 8,
								"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1710"
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "number"
						}
					},
					"setSignature": {
						"id": 224,
						"name": "dragRotationRate",
						"variant": "signature",
						"kind": 1048576,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Sets the current drag rotation rate.\n\nThis configures how many degrees the "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "Camera"
								},
								{
									"kind": "text",
									"text": " rotates/orbits for a full sweep of the canvas by mouse or touch dragging.\n\nFor example, a value of "
								},
								{
									"kind": "code",
									"text": "````360.0````"
								},
								{
									"kind": "text",
									"text": " indicates that the "
								},
								{
									"kind": "code",
									"text": "````Camera````"
								},
								{
									"kind": "text",
									"text": " rotates/orbits "
								},
								{
									"kind": "code",
									"text": "````360.0````"
								},
								{
									"kind": "text",
									"text": " degrees horizontally\nwhen we sweep the entire width of the canvas.\n\n"
								},
								{
									"kind": "code",
									"text": "````CameraControl````"
								},
								{
									"kind": "text",
									"text": " makes vertical rotation half as sensitive as horizontal rotation, so that we don't tend to\nflip upside-down. Therefore, a value of "
								},
								{
									"kind": "code",
									"text": "````360.0````"
								},
								{
									"kind": "text",
									"text": " rotates/orbits the "
								},
								{
									"kind": "code",
									"text": "````Camera````"
								},
								{
									"kind": "text",
									"text": " through "
								},
								{
									"kind": "code",
									"text": "````180.0````"
								},
								{
									"kind": "text",
									"text": " degrees\nvertically when we sweep the entire height of the canvas.\n\nDefault is "
								},
								{
									"kind": "code",
									"text": "````360.0````"
								},
								{
									"kind": "text",
									"text": "."
								}
							]
						},
						"sources": [
							{
								"fileName": "cameracontrol/src/CameraControl.ts",
								"line": 1699,
								"character": 8,
								"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1699"
							}
						],
						"parameters": [
							{
								"id": 225,
								"name": "dragRotationRate",
								"variant": "param",
								"kind": 32768,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "The new drag rotation rate."
										}
									]
								},
								"type": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						}
					}
				},
				{
					"id": 190,
					"name": "firstPerson",
					"variant": "declaration",
					"kind": 262144,
					"flags": {},
					"sources": [
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 1474,
							"character": 8,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1474"
						},
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 1496,
							"character": 8,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1496"
						}
					],
					"getSignature": {
						"id": 191,
						"name": "firstPerson",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Gets whether this "
								},
								{
									"kind": "code",
									"text": "````CameraControl````"
								},
								{
									"kind": "text",
									"text": " is in first-person mode.\n\nIn \"first person\" mode (disabled by default) the look position rotates about the eye position. Otherwise,  "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "Camera#eye"
								},
								{
									"kind": "text",
									"text": " rotates about "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "Camera#look"
								},
								{
									"kind": "text",
									"text": ".\n\nDefault is "
								},
								{
									"kind": "code",
									"text": "````false````"
								},
								{
									"kind": "text",
									"text": ".\n\nDeprecated - use "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "CameraControl#navMode",
									"target": 160,
									"tsLinkText": ""
								},
								{
									"kind": "text",
									"text": " instead."
								}
							],
							"blockTags": [
								{
									"tag": "@returns",
									"content": [
										{
											"kind": "text",
											"text": "Returns "
										},
										{
											"kind": "code",
											"text": "````true````"
										},
										{
											"kind": "text",
											"text": " if first-person mode is enabled."
										}
									]
								},
								{
									"tag": "@deprecated",
									"content": []
								}
							]
						},
						"sources": [
							{
								"fileName": "cameracontrol/src/CameraControl.ts",
								"line": 1496,
								"character": 8,
								"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1496"
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "boolean"
						}
					},
					"setSignature": {
						"id": 192,
						"name": "firstPerson",
						"variant": "signature",
						"kind": 1048576,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Sets whether this "
								},
								{
									"kind": "code",
									"text": "````CameraControl````"
								},
								{
									"kind": "text",
									"text": " is in first-person mode.\n\nIn \"first person\" mode (disabled by default) the look position rotates about the eye position. Otherwise,  "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "Camera#eye"
								},
								{
									"kind": "text",
									"text": " rotates about "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "Camera#look"
								},
								{
									"kind": "text",
									"text": ".\n\nDefault is "
								},
								{
									"kind": "code",
									"text": "````false````"
								},
								{
									"kind": "text",
									"text": ".\n\nDeprecated - use "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "CameraControl#navMode",
									"target": 160,
									"tsLinkText": ""
								},
								{
									"kind": "text",
									"text": " instead."
								}
							],
							"blockTags": [
								{
									"tag": "@deprecated",
									"content": []
								}
							]
						},
						"sources": [
							{
								"fileName": "cameracontrol/src/CameraControl.ts",
								"line": 1474,
								"character": 8,
								"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1474"
							}
						],
						"parameters": [
							{
								"id": 193,
								"name": "value",
								"variant": "param",
								"kind": 32768,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "Set "
										},
										{
											"kind": "code",
											"text": "````true````"
										},
										{
											"kind": "text",
											"text": " to enable first-person mode."
										}
									]
								},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						}
					}
				},
				{
					"id": 170,
					"name": "followPointer",
					"variant": "declaration",
					"kind": 262144,
					"flags": {},
					"sources": [
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 1343,
							"character": 8,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1343"
						},
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 1362,
							"character": 8,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1362"
						}
					],
					"getSignature": {
						"id": 171,
						"name": "followPointer",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Sets whether the "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "Camera"
								},
								{
									"kind": "text",
									"text": " follows the mouse/touch pointer.\n\nIn orbiting mode, the Camera will orbit about the pointer, and will dolly to and from the pointer.\n\nIn fly-to mode, the Camera will dolly to and from the pointer, however the World will always rotate about the Camera position.\n\nIn plan-view mode, the Camera will dolly to and from the pointer, however the Camera will not rotate.\n\nDefault is "
								},
								{
									"kind": "code",
									"text": "````true````"
								},
								{
									"kind": "text",
									"text": ".\n\nSee class comments for more info."
								}
							],
							"blockTags": [
								{
									"tag": "@returns",
									"content": [
										{
											"kind": "text",
											"text": "Returns "
										},
										{
											"kind": "code",
											"text": "````true````"
										},
										{
											"kind": "text",
											"text": " if the Camera follows the pointer."
										}
									]
								}
							]
						},
						"sources": [
							{
								"fileName": "cameracontrol/src/CameraControl.ts",
								"line": 1362,
								"character": 8,
								"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1362"
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "boolean"
						}
					},
					"setSignature": {
						"id": 172,
						"name": "followPointer",
						"variant": "signature",
						"kind": 1048576,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Sets whether the "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "Camera"
								},
								{
									"kind": "text",
									"text": " follows the mouse/touch pointer.\n\nIn orbiting mode, the Camera will orbit about the pointer, and will dolly to and from the pointer.\n\nIn fly-to mode, the Camera will dolly to and from the pointer, however the World will always rotate about the Camera position.\n\nIn plan-view mode, the Camera will dolly to and from the pointer, however the Camera will not rotate.\n\nDefault is "
								},
								{
									"kind": "code",
									"text": "````true````"
								},
								{
									"kind": "text",
									"text": ".\n\nSee class comments for more info."
								}
							]
						},
						"sources": [
							{
								"fileName": "cameracontrol/src/CameraControl.ts",
								"line": 1343,
								"character": 8,
								"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1343"
							}
						],
						"parameters": [
							{
								"id": 173,
								"name": "value",
								"variant": "param",
								"kind": 32768,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "Set "
										},
										{
											"kind": "code",
											"text": "````true````"
										},
										{
											"kind": "text",
											"text": " to enable the Camera to follow the pointer."
										}
									]
								},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						}
					}
				},
				{
					"id": 129,
					"name": "keyMap",
					"variant": "declaration",
					"kind": 262144,
					"flags": {},
					"sources": [
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 1033,
							"character": 8,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1033"
						},
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 1098,
							"character": 8,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1098"
						}
					],
					"getSignature": {
						"id": 130,
						"name": "keyMap",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Gets custom mappings of keys to "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "CameraControl",
									"target": 24,
									"tsLinkText": ""
								},
								{
									"kind": "text",
									"text": " actions."
								}
							],
							"blockTags": [
								{
									"tag": "@returns",
									"content": [
										{
											"kind": "text",
											"text": "Current key mappings."
										}
									]
								}
							]
						},
						"sources": [
							{
								"fileName": "cameracontrol/src/CameraControl.ts",
								"line": 1098,
								"character": 8,
								"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1098"
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"setSignature": {
						"id": 131,
						"name": "keyMap",
						"variant": "signature",
						"kind": 1048576,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Sets custom mappings of keys to "
								},
								{
									"kind": "code",
									"text": "````CameraControl````"
								},
								{
									"kind": "text",
									"text": " actions.\n\nSee class docs for usage."
								}
							]
						},
						"sources": [
							{
								"fileName": "cameracontrol/src/CameraControl.ts",
								"line": 1033,
								"character": 8,
								"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1033"
							}
						],
						"parameters": [
							{
								"id": 132,
								"name": "value",
								"variant": "param",
								"kind": 32768,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "Either a set of new key mappings, or a string to select a keyboard layout,\nwhich causes "
										},
										{
											"kind": "code",
											"text": "````CameraControl````"
										},
										{
											"kind": "text",
											"text": " to use the default key mappings for that layout."
										}
									]
								},
								"type": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						}
					}
				},
				{
					"id": 226,
					"name": "keyboardDollyRate",
					"variant": "declaration",
					"kind": 262144,
					"flags": {},
					"sources": [
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 1722,
							"character": 8,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1722"
						},
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 1733,
							"character": 8,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1733"
						}
					],
					"getSignature": {
						"id": 227,
						"name": "keyboardDollyRate",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Gets how much the "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "Camera"
								},
								{
									"kind": "text",
									"text": " dollys each second with keyboard input.\n\nDefault is "
								},
								{
									"kind": "code",
									"text": "````15.0````"
								},
								{
									"kind": "text",
									"text": "."
								}
							],
							"blockTags": [
								{
									"tag": "@returns",
									"content": [
										{
											"kind": "text",
											"text": "The current keyboard dolly rate."
										}
									]
								}
							]
						},
						"sources": [
							{
								"fileName": "cameracontrol/src/CameraControl.ts",
								"line": 1733,
								"character": 8,
								"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1733"
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "number"
						}
					},
					"setSignature": {
						"id": 228,
						"name": "keyboardDollyRate",
						"variant": "signature",
						"kind": 1048576,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Sets how much the "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "Camera"
								},
								{
									"kind": "text",
									"text": " dollys each second with keyboard input.\n\nDefault is "
								},
								{
									"kind": "code",
									"text": "````15.0````"
								},
								{
									"kind": "text",
									"text": ", to dolly the "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "Camera"
								},
								{
									"kind": "text",
									"text": " "
								},
								{
									"kind": "code",
									"text": "````15.0````"
								},
								{
									"kind": "text",
									"text": " World-space units per second while we hold down\nthe "
								},
								{
									"kind": "code",
									"text": "````+````"
								},
								{
									"kind": "text",
									"text": " and "
								},
								{
									"kind": "code",
									"text": "````-````"
								},
								{
									"kind": "text",
									"text": " keys."
								}
							]
						},
						"sources": [
							{
								"fileName": "cameracontrol/src/CameraControl.ts",
								"line": 1722,
								"character": 8,
								"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1722"
							}
						],
						"parameters": [
							{
								"id": 229,
								"name": "keyboardDollyRate",
								"variant": "param",
								"kind": 32768,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "The new keyboard dolly rate."
										}
									]
								},
								"type": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						}
					}
				},
				{
					"id": 156,
					"name": "keyboardEnabledOnlyIfMouseover",
					"variant": "declaration",
					"kind": 262144,
					"flags": {},
					"sources": [
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 1228,
							"character": 8,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1228"
						},
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 1237,
							"character": 8,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1237"
						}
					],
					"getSignature": {
						"id": 157,
						"name": "keyboardEnabledOnlyIfMouseover",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Gets whether the keyboard shortcuts are enabled ONLY if the mouse is over the canvas or ALWAYS."
								}
							],
							"blockTags": [
								{
									"tag": "@returns",
									"content": []
								}
							]
						},
						"sources": [
							{
								"fileName": "cameracontrol/src/CameraControl.ts",
								"line": 1237,
								"character": 8,
								"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1237"
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "boolean"
						}
					},
					"setSignature": {
						"id": 158,
						"name": "keyboardEnabledOnlyIfMouseover",
						"variant": "signature",
						"kind": 1048576,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "If "
								},
								{
									"kind": "code",
									"text": "`true`"
								},
								{
									"kind": "text",
									"text": ", the keyboard shortcuts are enabled ONLY if the mouse is over the canvas."
								}
							]
						},
						"sources": [
							{
								"fileName": "cameracontrol/src/CameraControl.ts",
								"line": 1228,
								"character": 8,
								"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1228"
							}
						],
						"parameters": [
							{
								"id": 159,
								"name": "value",
								"variant": "param",
								"kind": 32768,
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						}
					}
				},
				{
					"id": 254,
					"name": "keyboardLayout",
					"variant": "declaration",
					"kind": 262144,
					"flags": {},
					"sources": [
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 1901,
							"character": 8,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1901"
						},
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 1923,
							"character": 8,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1923"
						}
					],
					"getSignature": {
						"id": 255,
						"name": "keyboardLayout",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Gets the keyboard layout.\n\nSupported layouts are:\n\n* "
								},
								{
									"kind": "code",
									"text": "````\"qwerty\"````"
								},
								{
									"kind": "text",
									"text": " (default)\n* "
								},
								{
									"kind": "code",
									"text": "````\"azerty\"````"
								}
							],
							"blockTags": [
								{
									"tag": "@deprecated",
									"content": []
								},
								{
									"tag": "@returns",
									"content": [
										{
											"kind": "text",
											"text": "The current keyboard layout."
										}
									]
								}
							]
						},
						"sources": [
							{
								"fileName": "cameracontrol/src/CameraControl.ts",
								"line": 1923,
								"character": 8,
								"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1923"
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"setSignature": {
						"id": 256,
						"name": "keyboardLayout",
						"variant": "signature",
						"kind": 1048576,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Sets the keyboard layout.\n\nSupported layouts are:\n\n* "
								},
								{
									"kind": "code",
									"text": "````\"qwerty\"````"
								},
								{
									"kind": "text",
									"text": " (default)\n* "
								},
								{
									"kind": "code",
									"text": "````\"azerty\"````"
								}
							],
							"blockTags": [
								{
									"tag": "@deprecated",
									"content": []
								}
							]
						},
						"sources": [
							{
								"fileName": "cameracontrol/src/CameraControl.ts",
								"line": 1901,
								"character": 8,
								"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1901"
							}
						],
						"parameters": [
							{
								"id": 257,
								"name": "value",
								"variant": "param",
								"kind": 32768,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "Selects the keyboard layout."
										}
									]
								},
								"type": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						}
					}
				},
				{
					"id": 210,
					"name": "keyboardPanRate",
					"variant": "declaration",
					"kind": 262144,
					"flags": {},
					"sources": [
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 1623,
							"character": 8,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1623"
						},
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 1655,
							"character": 8,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1655"
						}
					],
					"getSignature": {
						"id": 211,
						"name": "keyboardPanRate",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Gets how much the "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "Camera"
								},
								{
									"kind": "text",
									"text": " pans each second with keyboard input.\n\nDefault is "
								},
								{
									"kind": "code",
									"text": "````5.0````"
								},
								{
									"kind": "text",
									"text": "."
								}
							],
							"blockTags": [
								{
									"tag": "@returns",
									"content": [
										{
											"kind": "text",
											"text": "The current keyboard pan rate."
										}
									]
								}
							]
						},
						"sources": [
							{
								"fileName": "cameracontrol/src/CameraControl.ts",
								"line": 1655,
								"character": 8,
								"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1655"
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "number"
						}
					},
					"setSignature": {
						"id": 212,
						"name": "keyboardPanRate",
						"variant": "signature",
						"kind": 1048576,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Sets how much the "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "Camera"
								},
								{
									"kind": "text",
									"text": " pans each second with keyboard input.\n\nDefault is "
								},
								{
									"kind": "code",
									"text": "````5.0````"
								},
								{
									"kind": "text",
									"text": ", to pan the Camera "
								},
								{
									"kind": "code",
									"text": "````5.0````"
								},
								{
									"kind": "text",
									"text": " World-space units every second that\na panning key is depressed. See the "
								},
								{
									"kind": "code",
									"text": "````CameraControl````"
								},
								{
									"kind": "text",
									"text": " class documentation for which keys control\npanning.\n\nPanning direction is aligned to our Camera's orientation. When we pan horizontally, we pan\nto our left and right, when we pan vertically, we pan upwards and downwards, and when we pan forwards\nand backwards, we pan along the direction the Camera is pointing.\n\nUnlike dollying when "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "followPointer",
									"target": 170,
									"tsLinkText": ""
								},
								{
									"kind": "text",
									"text": " is "
								},
								{
									"kind": "code",
									"text": "````true````"
								},
								{
									"kind": "text",
									"text": ", panning does not follow the pointer."
								}
							]
						},
						"sources": [
							{
								"fileName": "cameracontrol/src/CameraControl.ts",
								"line": 1623,
								"character": 8,
								"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1623"
							}
						],
						"parameters": [
							{
								"id": 213,
								"name": "keyboardPanRate",
								"variant": "param",
								"kind": 32768,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "The new keyboard pan rate."
										}
									]
								},
								"type": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						}
					}
				},
				{
					"id": 218,
					"name": "keyboardRotationRate",
					"variant": "declaration",
					"kind": 262144,
					"flags": {},
					"sources": [
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 1668,
							"character": 8,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1668"
						},
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 1679,
							"character": 8,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1679"
						}
					],
					"getSignature": {
						"id": 219,
						"name": "keyboardRotationRate",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Sets how many degrees per second the "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "Camera"
								},
								{
									"kind": "text",
									"text": " rotates/orbits with keyboard input.\n\nDefault is "
								},
								{
									"kind": "code",
									"text": "````90.0````"
								},
								{
									"kind": "text",
									"text": "."
								}
							],
							"blockTags": [
								{
									"tag": "@returns",
									"content": [
										{
											"kind": "text",
											"text": "The current keyboard rotation rate."
										}
									]
								}
							]
						},
						"sources": [
							{
								"fileName": "cameracontrol/src/CameraControl.ts",
								"line": 1679,
								"character": 8,
								"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1679"
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "number"
						}
					},
					"setSignature": {
						"id": 220,
						"name": "keyboardRotationRate",
						"variant": "signature",
						"kind": 1048576,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Sets how many degrees per second the "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "Camera"
								},
								{
									"kind": "text",
									"text": " rotates/orbits with keyboard input.\n\nDefault is "
								},
								{
									"kind": "code",
									"text": "````90.0````"
								},
								{
									"kind": "text",
									"text": ", to rotate/orbit the Camera "
								},
								{
									"kind": "code",
									"text": "````90.0````"
								},
								{
									"kind": "text",
									"text": " degrees every second that\na rotation key is depressed. See the "
								},
								{
									"kind": "code",
									"text": "````CameraControl````"
								},
								{
									"kind": "text",
									"text": " class documentation for which keys control\nrotation/orbit."
								}
							]
						},
						"sources": [
							{
								"fileName": "cameracontrol/src/CameraControl.ts",
								"line": 1668,
								"character": 8,
								"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1668"
							}
						],
						"parameters": [
							{
								"id": 221,
								"name": "keyboardRotationRate",
								"variant": "param",
								"kind": 32768,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "The new keyboard rotation rate."
										}
									]
								},
								"type": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						}
					}
				},
				{
					"id": 234,
					"name": "mouseWheelDollyRate",
					"variant": "declaration",
					"kind": 262144,
					"flags": {},
					"sources": [
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 1767,
							"character": 8,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1767"
						},
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 1778,
							"character": 8,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1778"
						}
					],
					"getSignature": {
						"id": 235,
						"name": "mouseWheelDollyRate",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Gets how much the "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "Camera"
								},
								{
									"kind": "text",
									"text": " dollys each second while the mouse wheel is spinning.\n\nDefault is "
								},
								{
									"kind": "code",
									"text": "````100.0````"
								},
								{
									"kind": "text",
									"text": "."
								}
							],
							"blockTags": [
								{
									"tag": "@returns",
									"content": [
										{
											"kind": "text",
											"text": "The current mouseWheel dolly rate."
										}
									]
								}
							]
						},
						"sources": [
							{
								"fileName": "cameracontrol/src/CameraControl.ts",
								"line": 1778,
								"character": 8,
								"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1778"
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "number"
						}
					},
					"setSignature": {
						"id": 236,
						"name": "mouseWheelDollyRate",
						"variant": "signature",
						"kind": 1048576,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Sets how much the "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "Camera"
								},
								{
									"kind": "text",
									"text": " dollys each second while the mouse wheel is spinning.\n\nDefault is "
								},
								{
									"kind": "code",
									"text": "````100.0````"
								},
								{
									"kind": "text",
									"text": ", to dolly the "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "Camera"
								},
								{
									"kind": "text",
									"text": " "
								},
								{
									"kind": "code",
									"text": "````10.0````"
								},
								{
									"kind": "text",
									"text": " World-space units per second as we spin\nthe mouse wheel."
								}
							]
						},
						"sources": [
							{
								"fileName": "cameracontrol/src/CameraControl.ts",
								"line": 1767,
								"character": 8,
								"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1767"
							}
						],
						"parameters": [
							{
								"id": 237,
								"name": "mouseWheelDollyRate",
								"variant": "param",
								"kind": 32768,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "The new mouse wheel dolly rate."
										}
									]
								},
								"type": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						}
					}
				},
				{
					"id": 160,
					"name": "navMode",
					"variant": "declaration",
					"kind": 262144,
					"flags": {},
					"sources": [
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 1252,
							"character": 8,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1252"
						},
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 1269,
							"character": 8,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1269"
						}
					],
					"getSignature": {
						"id": 161,
						"name": "navMode",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Gets the current navigation mode.\n\nReturned values are:\n\n* "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "@xeokit/constants!OrbitNavigationMode"
								},
								{
									"kind": "text",
									"text": " - rotation orbits about the current target or pivot point,\n* "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "@xeokit/constants!FirstPersonNavigationMode"
								},
								{
									"kind": "text",
									"text": " - rotation is about the current eye position,\n* "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "@xeokit/constants!PlanViewNavigationMode"
								},
								{
									"kind": "text",
									"text": " - rotation is disabled."
								}
							],
							"blockTags": [
								{
									"tag": "@returns",
									"content": [
										{
											"kind": "text",
											"text": "The navigation mode: OrbitNavigationMode, FirstPersonNavigationMode or PlanViewNavigationMode."
										}
									]
								}
							]
						},
						"sources": [
							{
								"fileName": "cameracontrol/src/CameraControl.ts",
								"line": 1252,
								"character": 8,
								"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1252"
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "number"
						}
					},
					"setSignature": {
						"id": 162,
						"name": "navMode",
						"variant": "signature",
						"kind": 1048576,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Sets the current navigation mode.\n\nAccepted values are:\n\n* "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "@xeokit/constants!OrbitNavigationMode"
								},
								{
									"kind": "text",
									"text": " - rotation orbits about the current target or pivot point,\n* "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "@xeokit/constants!FirstPersonNavigationMode"
								},
								{
									"kind": "text",
									"text": " - rotation is about the current eye position,\n* "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "@xeokit/constants!PlanViewNavigationMode"
								},
								{
									"kind": "text",
									"text": " - rotation is disabled.\n\nSee class comments for more info."
								}
							]
						},
						"sources": [
							{
								"fileName": "cameracontrol/src/CameraControl.ts",
								"line": 1269,
								"character": 8,
								"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1269"
							}
						],
						"parameters": [
							{
								"id": 163,
								"name": "navMode",
								"variant": "param",
								"kind": 32768,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "The navigation mode: OrbitNavigationMode, FirstPersonNavigationMode or PlanViewNavigationMode."
										}
									]
								},
								"type": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						}
					}
				},
				{
					"id": 250,
					"name": "panInertia",
					"variant": "declaration",
					"kind": 262144,
					"flags": {},
					"sources": [
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 1875,
							"character": 8,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1875"
						},
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 1886,
							"character": 8,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1886"
						}
					],
					"getSignature": {
						"id": 251,
						"name": "panInertia",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Gets the pan inertia factor.\n\nDefault is "
								},
								{
									"kind": "code",
									"text": "````0.5````"
								},
								{
									"kind": "text",
									"text": "."
								}
							],
							"blockTags": [
								{
									"tag": "@returns",
									"content": [
										{
											"kind": "text",
											"text": "The current pan inertia factor."
										}
									]
								}
							]
						},
						"sources": [
							{
								"fileName": "cameracontrol/src/CameraControl.ts",
								"line": 1886,
								"character": 8,
								"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1886"
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "number"
						}
					},
					"setSignature": {
						"id": 252,
						"name": "panInertia",
						"variant": "signature",
						"kind": 1048576,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Sets the pan inertia factor.\n\nThis factor configures how much the "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "Camera"
								},
								{
									"kind": "text",
									"text": " keeps moving after you finish panning it.\n\nThis factor is a value in range "
								},
								{
									"kind": "code",
									"text": "````[0..1]````"
								},
								{
									"kind": "text",
									"text": ". A value of "
								},
								{
									"kind": "code",
									"text": "````0.0````"
								},
								{
									"kind": "text",
									"text": " causes panning to immediately stop,\n"
								},
								{
									"kind": "code",
									"text": "````0.5````"
								},
								{
									"kind": "text",
									"text": " causes panning to decay 50% on each animation frame, while "
								},
								{
									"kind": "code",
									"text": "````1.0````"
								},
								{
									"kind": "text",
									"text": " causes no decay, which allows panning\nto continue until further input stops it.\n\nYou might set "
								},
								{
									"kind": "code",
									"text": "````panInertia````"
								},
								{
									"kind": "text",
									"text": " to zero when you want be able to precisely position or rotate the Camera,\nwithout interference from inertia. This also means that xeokit renders less frames while panning the Camera,\nwich can improve rendering performance.\n\nDefault is "
								},
								{
									"kind": "code",
									"text": "````0.5````"
								},
								{
									"kind": "text",
									"text": "."
								}
							]
						},
						"sources": [
							{
								"fileName": "cameracontrol/src/CameraControl.ts",
								"line": 1875,
								"character": 8,
								"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1875"
							}
						],
						"parameters": [
							{
								"id": 253,
								"name": "panInertia",
								"variant": "param",
								"kind": 32768,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "New pan inertia factor."
										}
									]
								},
								"type": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						}
					}
				},
				{
					"id": 202,
					"name": "panRightClick",
					"variant": "declaration",
					"kind": 262144,
					"flags": {},
					"sources": [
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 1560,
							"character": 8,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1560"
						},
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 1571,
							"character": 8,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1571"
						}
					],
					"getSignature": {
						"id": 203,
						"name": "panRightClick",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Gets whether right-clicking pans the "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "Camera"
								},
								{
									"kind": "text",
									"text": ".\n\nDefault is "
								},
								{
									"kind": "code",
									"text": "````true````"
								},
								{
									"kind": "text",
									"text": "."
								}
							],
							"blockTags": [
								{
									"tag": "@returns",
									"content": [
										{
											"kind": "text",
											"text": "Returns "
										},
										{
											"kind": "code",
											"text": "````false````"
										},
										{
											"kind": "text",
											"text": " when pan on right-click is disabled."
										}
									]
								}
							]
						},
						"sources": [
							{
								"fileName": "cameracontrol/src/CameraControl.ts",
								"line": 1571,
								"character": 8,
								"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1571"
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "boolean"
						}
					},
					"setSignature": {
						"id": 204,
						"name": "panRightClick",
						"variant": "signature",
						"kind": 1048576,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Sets whether either right-clicking (true) or middle-clicking (false) pans the "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "Camera"
								},
								{
									"kind": "text",
									"text": ".\n\nDefault is "
								},
								{
									"kind": "code",
									"text": "````true````"
								},
								{
									"kind": "text",
									"text": "."
								}
							]
						},
						"sources": [
							{
								"fileName": "cameracontrol/src/CameraControl.ts",
								"line": 1560,
								"character": 8,
								"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1560"
							}
						],
						"parameters": [
							{
								"id": 205,
								"name": "value",
								"variant": "param",
								"kind": 32768,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "Set "
										},
										{
											"kind": "code",
											"text": "````false````"
										},
										{
											"kind": "text",
											"text": " to disable pan on right-click."
										}
									]
								},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						}
					}
				},
				{
					"id": 182,
					"name": "panToPointer",
					"variant": "declaration",
					"kind": 262144,
					"flags": {},
					"sources": [
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 1410,
							"character": 8,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1410"
						},
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 1418,
							"character": 8,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1418"
						}
					],
					"getSignature": {
						"id": 183,
						"name": "panToPointer",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"comment": {
							"summary": [],
							"blockTags": [
								{
									"tag": "@deprecated",
									"content": []
								},
								{
									"tag": "@returns",
									"content": [
										{
											"kind": "text",
											"text": "Returns "
										},
										{
											"kind": "code",
											"text": "````true````"
										},
										{
											"kind": "text",
											"text": " if dolly-to-pointer behaviour is enabled."
										}
									]
								}
							]
						},
						"sources": [
							{
								"fileName": "cameracontrol/src/CameraControl.ts",
								"line": 1418,
								"character": 8,
								"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1418"
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "boolean"
						}
					},
					"setSignature": {
						"id": 184,
						"name": "panToPointer",
						"variant": "signature",
						"kind": 1048576,
						"flags": {},
						"comment": {
							"summary": [],
							"blockTags": [
								{
									"tag": "@deprecated",
									"content": []
								}
							]
						},
						"sources": [
							{
								"fileName": "cameracontrol/src/CameraControl.ts",
								"line": 1410,
								"character": 8,
								"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1410"
							}
						],
						"parameters": [
							{
								"id": 185,
								"name": "value",
								"variant": "param",
								"kind": 32768,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "Set "
										},
										{
											"kind": "code",
											"text": "````true````"
										},
										{
											"kind": "text",
											"text": " to enable dolly-to-pointer behaviour."
										}
									]
								},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						}
					}
				},
				{
					"id": 137,
					"name": "pivotElement",
					"variant": "declaration",
					"kind": 262144,
					"flags": {},
					"sources": [
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 1132,
							"character": 8,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1132"
						}
					],
					"setSignature": {
						"id": 138,
						"name": "pivotElement",
						"variant": "signature",
						"kind": 1048576,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Sets the HTMl element to represent the pivot point when "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "CameraControl#followPointer",
									"target": 170,
									"tsLinkText": ""
								},
								{
									"kind": "text",
									"text": " is true.\n\nSee class comments for an example."
								}
							]
						},
						"sources": [
							{
								"fileName": "cameracontrol/src/CameraControl.ts",
								"line": 1132,
								"character": 8,
								"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1132"
							}
						],
						"parameters": [
							{
								"id": 139,
								"name": "element",
								"variant": "param",
								"kind": 32768,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "HTML element representing the pivot point."
										}
									]
								},
								"type": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/.pnpm/typescript@4.9.4/node_modules/typescript/lib/lib.dom.d.ts",
										"qualifiedName": "HTMLElement"
									},
									"name": "HTMLElement",
									"package": "typescript"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						}
					}
				},
				{
					"id": 174,
					"name": "pivotPos",
					"variant": "declaration",
					"kind": 262144,
					"flags": {},
					"sources": [
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 1373,
							"character": 8,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1373"
						},
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 1384,
							"character": 8,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1384"
						}
					],
					"getSignature": {
						"id": 175,
						"name": "pivotPos",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Gets the current World-space 3D pivot position.\n\nOnly applies when "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "CameraControl#followPointer",
									"target": 170,
									"tsLinkText": ""
								},
								{
									"kind": "text",
									"text": " is "
								},
								{
									"kind": "code",
									"text": "````true````"
								},
								{
									"kind": "text",
									"text": "."
								}
							],
							"blockTags": [
								{
									"tag": "@returns",
									"content": [
										{
											"kind": "text",
											"text": "worldPos The current World-space 3D pivot position."
										}
									]
								}
							]
						},
						"sources": [
							{
								"fileName": "cameracontrol/src/CameraControl.ts",
								"line": 1384,
								"character": 8,
								"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1384"
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "any"
						}
					},
					"setSignature": {
						"id": 176,
						"name": "pivotPos",
						"variant": "signature",
						"kind": 1048576,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Sets the current World-space 3D target position.\n\nOnly applies when "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "CameraControl#followPointer",
									"target": 170,
									"tsLinkText": ""
								},
								{
									"kind": "text",
									"text": " is "
								},
								{
									"kind": "code",
									"text": "````true````"
								},
								{
									"kind": "text",
									"text": "."
								}
							]
						},
						"sources": [
							{
								"fileName": "cameracontrol/src/CameraControl.ts",
								"line": 1373,
								"character": 8,
								"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1373"
							}
						],
						"parameters": [
							{
								"id": 177,
								"name": "worldPos",
								"variant": "param",
								"kind": 32768,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "The new World-space 3D target position."
										}
									]
								},
								"type": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						}
					}
				},
				{
					"id": 186,
					"name": "planView",
					"variant": "declaration",
					"kind": 262144,
					"flags": {},
					"sources": [
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 1435,
							"character": 8,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1435"
						},
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 1457,
							"character": 8,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1457"
						}
					],
					"getSignature": {
						"id": 187,
						"name": "planView",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Gets whether this "
								},
								{
									"kind": "code",
									"text": "````CameraControl````"
								},
								{
									"kind": "text",
									"text": " is in plan-view mode.\n\nWhen in plan-view mode, rotation is disabled.\n\nDefault is "
								},
								{
									"kind": "code",
									"text": "````false````"
								},
								{
									"kind": "text",
									"text": ".\n\nDeprecated - use "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "CameraControl#navMode",
									"target": 160,
									"tsLinkText": ""
								},
								{
									"kind": "text",
									"text": " instead."
								}
							],
							"blockTags": [
								{
									"tag": "@returns",
									"content": [
										{
											"kind": "text",
											"text": "Returns "
										},
										{
											"kind": "code",
											"text": "````true````"
										},
										{
											"kind": "text",
											"text": " if plan-view mode is enabled."
										}
									]
								},
								{
									"tag": "@deprecated",
									"content": []
								}
							]
						},
						"sources": [
							{
								"fileName": "cameracontrol/src/CameraControl.ts",
								"line": 1457,
								"character": 8,
								"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1457"
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "boolean"
						}
					},
					"setSignature": {
						"id": 188,
						"name": "planView",
						"variant": "signature",
						"kind": 1048576,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Sets whether this "
								},
								{
									"kind": "code",
									"text": "````CameraControl````"
								},
								{
									"kind": "text",
									"text": " is in plan-view mode.\n\nWhen in plan-view mode, rotation is disabled.\n\nDefault is "
								},
								{
									"kind": "code",
									"text": "````false````"
								},
								{
									"kind": "text",
									"text": ".\n\nDeprecated - use "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "CameraControl#navMode",
									"target": 160,
									"tsLinkText": ""
								},
								{
									"kind": "text",
									"text": " instead."
								}
							],
							"blockTags": [
								{
									"tag": "@deprecated",
									"content": []
								}
							]
						},
						"sources": [
							{
								"fileName": "cameracontrol/src/CameraControl.ts",
								"line": 1435,
								"character": 8,
								"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1435"
							}
						],
						"parameters": [
							{
								"id": 189,
								"name": "value",
								"variant": "param",
								"kind": 32768,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "Set "
										},
										{
											"kind": "code",
											"text": "````true````"
										},
										{
											"kind": "text",
											"text": " to enable plan-view mode."
										}
									]
								},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						}
					}
				},
				{
					"id": 164,
					"name": "pointerEnabled",
					"variant": "declaration",
					"kind": 262144,
					"flags": {},
					"sources": [
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 1294,
							"character": 8,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1294"
						},
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 1324,
							"character": 8,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1324"
						}
					],
					"getSignature": {
						"id": 165,
						"name": "pointerEnabled",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Gets whether mouse and touch input is enabled.\n\nDefault is "
								},
								{
									"kind": "code",
									"text": "````true````"
								},
								{
									"kind": "text",
									"text": ".\n\nDisabling mouse and touch input on "
								},
								{
									"kind": "code",
									"text": "````CameraControl````"
								},
								{
									"kind": "text",
									"text": " is desirable when we want to temporarily use mouse or\ntouch input to interact with some other 3D control, without interfering with the "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "Camera"
								},
								{
									"kind": "text",
									"text": "."
								}
							],
							"blockTags": [
								{
									"tag": "@returns",
									"content": [
										{
											"kind": "text",
											"text": "Returns "
										},
										{
											"kind": "code",
											"text": "````true````"
										},
										{
											"kind": "text",
											"text": " if mouse and touch input is enabled."
										}
									]
								}
							]
						},
						"sources": [
							{
								"fileName": "cameracontrol/src/CameraControl.ts",
								"line": 1324,
								"character": 8,
								"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1324"
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "boolean"
						}
					},
					"setSignature": {
						"id": 166,
						"name": "pointerEnabled",
						"variant": "signature",
						"kind": 1048576,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Sets whether mouse and touch input is enabled.\n\nDefault is "
								},
								{
									"kind": "code",
									"text": "````true````"
								},
								{
									"kind": "text",
									"text": ".\n\nDisabling mouse and touch input on "
								},
								{
									"kind": "code",
									"text": "````CameraControl````"
								},
								{
									"kind": "text",
									"text": " is useful when we want to temporarily use mouse or\ntouch input to interact with some other 3D control, without disturbing the "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "Camera"
								},
								{
									"kind": "text",
									"text": "."
								}
							]
						},
						"sources": [
							{
								"fileName": "cameracontrol/src/CameraControl.ts",
								"line": 1294,
								"character": 8,
								"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1294"
							}
						],
						"parameters": [
							{
								"id": 167,
								"name": "value",
								"variant": "param",
								"kind": 32768,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "Set "
										},
										{
											"kind": "code",
											"text": "````true````"
										},
										{
											"kind": "text",
											"text": " to enable mouse and touch input."
										}
									]
								},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						}
					}
				},
				{
					"id": 206,
					"name": "rotationInertia",
					"variant": "declaration",
					"kind": 262144,
					"flags": {},
					"sources": [
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 1591,
							"character": 8,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1591"
						},
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 1604,
							"character": 8,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1604"
						}
					],
					"getSignature": {
						"id": 207,
						"name": "rotationInertia",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Gets the rotation inertia factor.\n\nDefault is "
								},
								{
									"kind": "code",
									"text": "````0.0````"
								},
								{
									"kind": "text",
									"text": ".\n\nDoes not apply when "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "CameraControl#navMode",
									"target": 160,
									"tsLinkText": ""
								},
								{
									"kind": "text",
									"text": " is "
								},
								{
									"kind": "code",
									"text": "````\"planView\"````"
								},
								{
									"kind": "text",
									"text": ", which disallows rotation."
								}
							],
							"blockTags": [
								{
									"tag": "@returns",
									"content": [
										{
											"kind": "text",
											"text": "The inertia factor."
										}
									]
								}
							]
						},
						"sources": [
							{
								"fileName": "cameracontrol/src/CameraControl.ts",
								"line": 1604,
								"character": 8,
								"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1604"
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "number"
						}
					},
					"setSignature": {
						"id": 208,
						"name": "rotationInertia",
						"variant": "signature",
						"kind": 1048576,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Sets a factor in range "
								},
								{
									"kind": "code",
									"text": "````[0..1]````"
								},
								{
									"kind": "text",
									"text": " indicating how much the "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "Camera"
								},
								{
									"kind": "text",
									"text": " keeps moving after you finish rotating it.\n\nA value of "
								},
								{
									"kind": "code",
									"text": "````0.0````"
								},
								{
									"kind": "text",
									"text": " causes it to immediately stop, "
								},
								{
									"kind": "code",
									"text": "````0.5````"
								},
								{
									"kind": "text",
									"text": " causes its movement to decay 50% on each tick,\nwhile "
								},
								{
									"kind": "code",
									"text": "````1.0````"
								},
								{
									"kind": "text",
									"text": " causes no decay, allowing it continue moving, by the current rate of rotation.\n\nYou may choose an inertia of zero when you want be able to precisely rotate the Camera,\nwithout interference from inertia. Zero inertia can also mean that less frames are rendered while\nyou are rotating the Camera.\n\nDefault is "
								},
								{
									"kind": "code",
									"text": "````0.0````"
								},
								{
									"kind": "text",
									"text": ".\n\nDoes not apply when "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "CameraControl#navMode",
									"target": 160,
									"tsLinkText": ""
								},
								{
									"kind": "text",
									"text": " is "
								},
								{
									"kind": "code",
									"text": "````\"planView\"````"
								},
								{
									"kind": "text",
									"text": ", which disallows rotation."
								}
							]
						},
						"sources": [
							{
								"fileName": "cameracontrol/src/CameraControl.ts",
								"line": 1591,
								"character": 8,
								"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1591"
							}
						],
						"parameters": [
							{
								"id": 209,
								"name": "rotationInertia",
								"variant": "param",
								"kind": 32768,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "New inertial factor."
										}
									]
								},
								"type": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						}
					}
				},
				{
					"id": 264,
					"name": "smartPivot",
					"variant": "declaration",
					"kind": 262144,
					"flags": {},
					"sources": [
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 1958,
							"character": 8,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1958"
						},
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 1974,
							"character": 8,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1974"
						}
					],
					"getSignature": {
						"id": 265,
						"name": "smartPivot",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Gets whether smart default pivoting is enabled.\n\nWhen "
								},
								{
									"kind": "code",
									"text": "````true````"
								},
								{
									"kind": "text",
									"text": ", we'll pivot by default about the 3D position of the mouse/touch pointer on an\nimaginary sphere that's centered at "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "Camera#eye"
								},
								{
									"kind": "text",
									"text": " and sized to the "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "Scene"
								},
								{
									"kind": "text",
									"text": " boundary.\n\nWhen "
								},
								{
									"kind": "code",
									"text": "````false````"
								},
								{
									"kind": "text",
									"text": ", we'll pivot by default about "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "Camera#look"
								},
								{
									"kind": "text",
									"text": ".\n\nDefault is "
								},
								{
									"kind": "code",
									"text": "````false````"
								},
								{
									"kind": "text",
									"text": "."
								}
							],
							"blockTags": [
								{
									"tag": "@returns",
									"content": [
										{
											"kind": "text",
											"text": "Returns "
										},
										{
											"kind": "code",
											"text": "````true````"
										},
										{
											"kind": "text",
											"text": " when pivoting by default about the selected point on the virtual sphere, or "
										},
										{
											"kind": "code",
											"text": "````false````"
										},
										{
											"kind": "text",
											"text": " when pivoting by default about "
										},
										{
											"kind": "inline-tag",
											"tag": "@link",
											"text": "Camera#look"
										},
										{
											"kind": "text",
											"text": "."
										}
									]
								}
							]
						},
						"sources": [
							{
								"fileName": "cameracontrol/src/CameraControl.ts",
								"line": 1974,
								"character": 8,
								"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1974"
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "boolean"
						}
					},
					"setSignature": {
						"id": 266,
						"name": "smartPivot",
						"variant": "signature",
						"kind": 1048576,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Sets whether smart default pivoting is enabled.\n\nWhen "
								},
								{
									"kind": "code",
									"text": "````true````"
								},
								{
									"kind": "text",
									"text": ", we'll pivot by default about the 3D position of the mouse/touch pointer on an\nimaginary sphere that's centered at "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "Camera#eye"
								},
								{
									"kind": "text",
									"text": " and sized to the "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "Scene"
								},
								{
									"kind": "text",
									"text": " boundary.\n\nWhen "
								},
								{
									"kind": "code",
									"text": "````false````"
								},
								{
									"kind": "text",
									"text": ", we'll pivot by default about "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "Camera#look"
								},
								{
									"kind": "text",
									"text": ".\n\nDefault is "
								},
								{
									"kind": "code",
									"text": "````false````"
								},
								{
									"kind": "text",
									"text": "."
								}
							]
						},
						"sources": [
							{
								"fileName": "cameracontrol/src/CameraControl.ts",
								"line": 1958,
								"character": 8,
								"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1958"
							}
						],
						"parameters": [
							{
								"id": 267,
								"name": "enabled",
								"variant": "param",
								"kind": 32768,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "Set "
										},
										{
											"kind": "code",
											"text": "````true````"
										},
										{
											"kind": "text",
											"text": " to pivot by default about the selected point on the virtual sphere, or "
										},
										{
											"kind": "code",
											"text": "````false````"
										},
										{
											"kind": "text",
											"text": " to pivot by default about "
										},
										{
											"kind": "inline-tag",
											"tag": "@link",
											"text": "Camera#look"
										},
										{
											"kind": "text",
											"text": "."
										}
									]
								},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						}
					}
				},
				{
					"id": 152,
					"name": "snapRadius",
					"variant": "declaration",
					"kind": 262144,
					"flags": {},
					"sources": [
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 1209,
							"character": 8,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1209"
						},
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 1219,
							"character": 8,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1219"
						}
					],
					"getSignature": {
						"id": 153,
						"name": "snapRadius",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Gets the current snap radius."
								}
							],
							"blockTags": [
								{
									"tag": "@returns",
									"content": [
										{
											"kind": "text",
											"text": "The snap radius."
										}
									]
								}
							]
						},
						"sources": [
							{
								"fileName": "cameracontrol/src/CameraControl.ts",
								"line": 1219,
								"character": 8,
								"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1219"
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "number"
						}
					},
					"setSignature": {
						"id": 154,
						"name": "snapRadius",
						"variant": "signature",
						"kind": 1048576,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Sets the current snap radius for \"hoverSnapOrSurface\" events, to specify whether the radius\nwithin which the pointer snaps to the nearest vertex or the nearest edge.\n\nDefault value is 30 pixels."
								}
							]
						},
						"sources": [
							{
								"fileName": "cameracontrol/src/CameraControl.ts",
								"line": 1209,
								"character": 8,
								"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1209"
							}
						],
						"parameters": [
							{
								"id": 155,
								"name": "snapRadius",
								"variant": "param",
								"kind": 32768,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "The snap radius."
										}
									]
								},
								"type": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						}
					}
				},
				{
					"id": 148,
					"name": "snapToEdge",
					"variant": "declaration",
					"kind": 262144,
					"flags": {},
					"sources": [
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 1188,
							"character": 8,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1188"
						},
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 1197,
							"character": 8,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1197"
						}
					],
					"getSignature": {
						"id": 149,
						"name": "snapToEdge",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Gets whether the pointer snap to edge."
								}
							],
							"blockTags": [
								{
									"tag": "@returns",
									"content": []
								}
							]
						},
						"sources": [
							{
								"fileName": "cameracontrol/src/CameraControl.ts",
								"line": 1197,
								"character": 8,
								"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1197"
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "boolean"
						}
					},
					"setSignature": {
						"id": 150,
						"name": "snapToEdge",
						"variant": "signature",
						"kind": 1048576,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Sets whether the pointer snap to edge."
								}
							]
						},
						"sources": [
							{
								"fileName": "cameracontrol/src/CameraControl.ts",
								"line": 1188,
								"character": 8,
								"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1188"
							}
						],
						"parameters": [
							{
								"id": 151,
								"name": "snapToEdge",
								"variant": "param",
								"kind": 32768,
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						}
					}
				},
				{
					"id": 144,
					"name": "snapToVertex",
					"variant": "declaration",
					"kind": 262144,
					"flags": {},
					"sources": [
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 1170,
							"character": 8,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1170"
						},
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 1179,
							"character": 8,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1179"
						}
					],
					"getSignature": {
						"id": 145,
						"name": "snapToVertex",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Gets whether the pointer snap to vertex."
								}
							],
							"blockTags": [
								{
									"tag": "@returns",
									"content": []
								}
							]
						},
						"sources": [
							{
								"fileName": "cameracontrol/src/CameraControl.ts",
								"line": 1179,
								"character": 8,
								"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1179"
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "boolean"
						}
					},
					"setSignature": {
						"id": 146,
						"name": "snapToVertex",
						"variant": "signature",
						"kind": 1048576,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Sets whether the pointer snap to vertex."
								}
							]
						},
						"sources": [
							{
								"fileName": "cameracontrol/src/CameraControl.ts",
								"line": 1170,
								"character": 8,
								"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1170"
							}
						],
						"parameters": [
							{
								"id": 147,
								"name": "snapToVertex",
								"variant": "param",
								"kind": 32768,
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						}
					}
				},
				{
					"id": 230,
					"name": "touchDollyRate",
					"variant": "declaration",
					"kind": 262144,
					"flags": {},
					"sources": [
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 1744,
							"character": 8,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1744"
						},
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 1755,
							"character": 8,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1755"
						}
					],
					"getSignature": {
						"id": 231,
						"name": "touchDollyRate",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Gets how much the "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "Camera"
								},
								{
									"kind": "text",
									"text": " dollys each second with touch input.\n\nDefault is "
								},
								{
									"kind": "code",
									"text": "````0.2````"
								},
								{
									"kind": "text",
									"text": "."
								}
							],
							"blockTags": [
								{
									"tag": "@returns",
									"content": [
										{
											"kind": "text",
											"text": "The current touch dolly rate."
										}
									]
								}
							]
						},
						"sources": [
							{
								"fileName": "cameracontrol/src/CameraControl.ts",
								"line": 1755,
								"character": 8,
								"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1755"
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "number"
						}
					},
					"setSignature": {
						"id": 232,
						"name": "touchDollyRate",
						"variant": "signature",
						"kind": 1048576,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Sets how much the "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "Camera"
								},
								{
									"kind": "text",
									"text": " dollys with touch input.\n\nDefault is "
								},
								{
									"kind": "code",
									"text": "````0.2````"
								}
							]
						},
						"sources": [
							{
								"fileName": "cameracontrol/src/CameraControl.ts",
								"line": 1744,
								"character": 8,
								"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1744"
							}
						],
						"parameters": [
							{
								"id": 233,
								"name": "touchDollyRate",
								"variant": "param",
								"kind": 32768,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "The new touch dolly rate."
										}
									]
								},
								"type": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						}
					}
				},
				{
					"id": 214,
					"name": "touchPanRate",
					"variant": "declaration",
					"kind": 262144,
					"flags": {},
					"sources": [
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 1633,
							"character": 8,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1633"
						},
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 1644,
							"character": 8,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1644"
						}
					],
					"getSignature": {
						"id": 215,
						"name": "touchPanRate",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Gets how fast the "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "Camera"
								},
								{
									"kind": "text",
									"text": " pans on touch panning\n\nDefault is "
								},
								{
									"kind": "code",
									"text": "````1.0````"
								},
								{
									"kind": "text",
									"text": "."
								}
							],
							"blockTags": [
								{
									"tag": "@returns",
									"content": [
										{
											"kind": "text",
											"text": "The current touch pan rate."
										}
									]
								}
							]
						},
						"sources": [
							{
								"fileName": "cameracontrol/src/CameraControl.ts",
								"line": 1644,
								"character": 8,
								"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1644"
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "number"
						}
					},
					"setSignature": {
						"id": 216,
						"name": "touchPanRate",
						"variant": "signature",
						"kind": 1048576,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Sets how fast the camera pans on touch panning"
								}
							]
						},
						"sources": [
							{
								"fileName": "cameracontrol/src/CameraControl.ts",
								"line": 1633,
								"character": 8,
								"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1633"
							}
						],
						"parameters": [
							{
								"id": 217,
								"name": "touchPanRate",
								"variant": "param",
								"kind": 32768,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "The new touch pan rate."
										}
									]
								},
								"type": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						}
					}
				},
				{
					"id": 276,
					"name": "_destroyControllers",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 2022,
							"character": 4,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L2022"
						}
					],
					"signatures": [
						{
							"id": 277,
							"name": "_destroyControllers",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "cameracontrol/src/CameraControl.ts",
									"line": 2022,
									"character": 4,
									"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L2022"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 274,
					"name": "_destroyHandlers",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 2013,
							"character": 4,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L2013"
						}
					],
					"signatures": [
						{
							"id": 275,
							"name": "_destroyHandlers",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "cameracontrol/src/CameraControl.ts",
									"line": 2013,
									"character": 4,
									"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L2013"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 168,
					"name": "_reset",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 1299,
							"character": 4,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1299"
						}
					],
					"signatures": [
						{
							"id": 169,
							"name": "_reset",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "cameracontrol/src/CameraControl.ts",
									"line": 1299,
									"character": 4,
									"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1299"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 296,
					"name": "clean",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "core/dist/Component.d.ts",
							"line": 75,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 297,
							"name": "clean",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Forces this component to action any deferred state updates."
									}
								]
							},
							"sources": [
								{
									"fileName": "core/dist/Component.d.ts",
									"line": 75,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Component.clean"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Component.clean"
					}
				},
				{
					"id": 294,
					"name": "cleanIfDirty",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "core/dist/Component.d.ts",
							"line": 71,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 295,
							"name": "cleanIfDirty",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Gives this component an opportunity to action any defered state updates."
									}
								]
							},
							"sources": [
								{
									"fileName": "core/dist/Component.d.ts",
									"line": 71,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Component.cleanIfDirty"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Component.cleanIfDirty"
					}
				},
				{
					"id": 262,
					"name": "disablePivotSphere",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 1942,
							"character": 4,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1942"
						}
					],
					"signatures": [
						{
							"id": 263,
							"name": "disablePivotSphere",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Remove the sphere as the representation of the pivot position."
									}
								]
							},
							"sources": [
								{
									"fileName": "cameracontrol/src/CameraControl.ts",
									"line": 1942,
									"character": 4,
									"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1942"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 258,
					"name": "enablePivotSphere",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 1934,
							"character": 4,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1934"
						}
					],
					"signatures": [
						{
							"id": 259,
							"name": "enablePivotSphere",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sets a sphere as the representation of the pivot position."
									}
								]
							},
							"sources": [
								{
									"fileName": "cameracontrol/src/CameraControl.ts",
									"line": 1934,
									"character": 4,
									"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1934"
								}
							],
							"parameters": [
								{
									"id": 260,
									"name": "cfg",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Sphere configuration."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 261,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "cameracontrol/src/CameraControl.ts",
													"line": 1934,
													"character": 28,
													"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L1934"
												}
											]
										}
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 289,
					"name": "error",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "core/dist/Component.d.ts",
							"line": 63,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 290,
							"name": "error",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isProtected": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Logs an error for this component to the JavaScript console.\n\nThe console message will have this format: *"
									},
									{
										"kind": "code",
										"text": "````[ERROR] [<component type> =<component id>: <message>````"
									},
									{
										"kind": "text",
										"text": "*"
									}
								]
							},
							"sources": [
								{
									"fileName": "core/dist/Component.d.ts",
									"line": 63,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 291,
									"name": "message",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The error message to log"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Component.error"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Component.error"
					}
				},
				{
					"id": 283,
					"name": "log",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "core/dist/Component.d.ts",
							"line": 45,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 284,
							"name": "log",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isProtected": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Logs a message for this component.\n\nThe message will have this format: *"
									},
									{
										"kind": "code",
										"text": "````[LOG] [<component type> <component id>: <message>````"
									},
									{
										"kind": "text",
										"text": "*"
									}
								]
							},
							"sources": [
								{
									"fileName": "core/dist/Component.d.ts",
									"line": 45,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 285,
									"name": "message",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The message to log"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Component.log"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Component.log"
					}
				},
				{
					"id": 292,
					"name": "setDirty",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "core/dist/Component.d.ts",
							"line": 67,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 293,
							"name": "setDirty",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Flags this component as having a defered state updates it needs to perform."
									}
								]
							},
							"sources": [
								{
									"fileName": "core/dist/Component.d.ts",
									"line": 67,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Component.setDirty"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Component.setDirty"
					}
				},
				{
					"id": 286,
					"name": "warn",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "core/dist/Component.d.ts",
							"line": 54,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 287,
							"name": "warn",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isProtected": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Logs a warning for this component to the JavaScript console.\n\nThe console message will have this format: *"
									},
									{
										"kind": "code",
										"text": "````[WARN] [<component type> =<component id>: <message>````"
									},
									{
										"kind": "text",
										"text": "*"
									}
								]
							},
							"sources": [
								{
									"fileName": "core/dist/Component.d.ts",
									"line": 54,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 288,
									"name": "message",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The warning message to log"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Component.warn"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Component.warn"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						280,
						281,
						279,
						47,
						38,
						42,
						40,
						39,
						37,
						41,
						36,
						35,
						30,
						28,
						29,
						25,
						26,
						27,
						32,
						31,
						34,
						33
					]
				},
				{
					"title": "Accessors",
					"children": [
						140,
						194,
						238,
						246,
						242,
						178,
						268,
						198,
						222,
						190,
						170,
						129,
						226,
						156,
						254,
						210,
						218,
						234,
						160,
						250,
						202,
						182,
						137,
						174,
						186,
						164,
						206,
						264,
						152,
						148,
						144,
						230,
						214
					]
				},
				{
					"title": "Methods",
					"children": [
						276,
						274,
						168,
						296,
						294,
						262,
						258,
						289,
						283,
						292,
						286
					]
				},
				{
					"title": "Events",
					"children": [
						282,
						57,
						59,
						58,
						49,
						52,
						51,
						53,
						61,
						60,
						50,
						54,
						56,
						55,
						62,
						48
					]
				}
			],
			"sources": [
				{
					"fileName": "cameracontrol/src/CameraControl.ts",
					"line": 541,
					"character": 13,
					"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L541"
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../core/src/Component.ts",
						"qualifiedName": "Component"
					},
					"name": "Component",
					"package": "@xeokit/core"
				}
			]
		},
		{
			"id": 1,
			"name": "CameraControlParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 15,
					"name": "active",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 71,
							"character": 4,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L71"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 19,
					"name": "constrainVertical",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 75,
							"character": 4,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L75"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 7,
					"name": "dollyInertia",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 63,
							"character": 4,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L63"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 5,
					"name": "dollyMinSpeed",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 61,
							"character": 4,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L61"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 6,
					"name": "dollyProximityThreshold",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 62,
							"character": 4,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L62"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 22,
					"name": "doublePickFlyTo",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 78,
							"character": 4,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L78"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 9,
					"name": "dragRotationRate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 65,
							"character": 4,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L65"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 14,
					"name": "followPointer",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 70,
							"character": 4,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L70"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 17,
					"name": "keyMap",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 73,
							"character": 4,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L73"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 3,
					"name": "keyboardDollyRate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 59,
							"character": 4,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L59"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 23,
					"name": "keyboardEnabled",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 79,
							"character": 4,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L79"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 18,
					"name": "keyboardLayout",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 74,
							"character": 4,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L74"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 12,
					"name": "keyboardPanRate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 68,
							"character": 4,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L68"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 10,
					"name": "keyboardRotationRate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 66,
							"character": 4,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L66"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 2,
					"name": "mouseWheelDollyRate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 58,
							"character": 4,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L58"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 21,
					"name": "navMode",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 77,
							"character": 4,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L77"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 4,
					"name": "panInertia",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 60,
							"character": 4,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L60"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 16,
					"name": "panRightClick",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 72,
							"character": 4,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L72"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 20,
					"name": "planView",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 76,
							"character": 4,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L76"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 13,
					"name": "rotationInertia",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 69,
							"character": 4,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L69"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 8,
					"name": "touchDollyRate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 64,
							"character": 4,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L64"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 11,
					"name": "touchPanRate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "cameracontrol/src/CameraControl.ts",
							"line": 67,
							"character": 4,
							"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L67"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						15,
						19,
						7,
						5,
						6,
						22,
						9,
						14,
						17,
						3,
						23,
						18,
						12,
						10,
						2,
						21,
						4,
						16,
						20,
						13,
						8,
						11
					]
				}
			],
			"sources": [
				{
					"fileName": "cameracontrol/src/CameraControl.ts",
					"line": 57,
					"character": 17,
					"url": "https://github.com/xeokit/sdk/blob/f8e2ce75ff190ff2f0a9f57a76bc4d7a65ee266f/packages/cameracontrol/src/CameraControl.ts#L57"
				}
			]
		}
	],
	"groups": [
		{
			"title": "Classes",
			"children": [
				24
			]
		},
		{
			"title": "Interfaces",
			"children": [
				1
			]
		}
	],
	"packageName": "@xeokit/cameracontrol",
	"packageVersion": "0.1.0",
	"readme": [
		{
			"kind": "text",
			"text": "# @xeokit/cameracontrol\n\n* See [API Documentation](https://xeokit.github.io/sdk/docs/modules/_xeokit_cameracontrol.html)"
		}
	],
	"symbolIdMap": {
		"0": {
			"sourceFileName": "src/index.ts",
			"qualifiedName": ""
		},
		"1": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControlParams"
		},
		"2": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControlParams.mouseWheelDollyRate"
		},
		"3": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControlParams.keyboardDollyRate"
		},
		"4": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControlParams.panInertia"
		},
		"5": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControlParams.dollyMinSpeed"
		},
		"6": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControlParams.dollyProximityThreshold"
		},
		"7": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControlParams.dollyInertia"
		},
		"8": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControlParams.touchDollyRate"
		},
		"9": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControlParams.dragRotationRate"
		},
		"10": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControlParams.keyboardRotationRate"
		},
		"11": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControlParams.touchPanRate"
		},
		"12": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControlParams.keyboardPanRate"
		},
		"13": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControlParams.rotationInertia"
		},
		"14": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControlParams.followPointer"
		},
		"15": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControlParams.active"
		},
		"16": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControlParams.panRightClick"
		},
		"17": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControlParams.keyMap"
		},
		"18": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControlParams.keyboardLayout"
		},
		"19": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControlParams.constrainVertical"
		},
		"20": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControlParams.planView"
		},
		"21": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControlParams.navMode"
		},
		"22": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControlParams.doublePickFlyTo"
		},
		"23": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControlParams.keyboardEnabled"
		},
		"24": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl"
		},
		"25": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.PAN_LEFT"
		},
		"26": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.PAN_RIGHT"
		},
		"27": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.PAN_UP"
		},
		"28": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.PAN_DOWN"
		},
		"29": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.PAN_FORWARDS"
		},
		"30": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.PAN_BACKWARDS"
		},
		"31": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.ROTATE_X_POS"
		},
		"32": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.ROTATE_X_NEG"
		},
		"33": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.ROTATE_Y_POS"
		},
		"34": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.ROTATE_Y_NEG"
		},
		"35": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.DOLLY_FORWARDS"
		},
		"36": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.DOLLY_BACKWARDS"
		},
		"37": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.AXIS_VIEW_RIGHT"
		},
		"38": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.AXIS_VIEW_BACK"
		},
		"39": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.AXIS_VIEW_LEFT"
		},
		"40": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.AXIS_VIEW_FRONT"
		},
		"41": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.AXIS_VIEW_TOP"
		},
		"42": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.AXIS_VIEW_BOTTOM"
		},
		"47": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.view"
		},
		"48": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.onRightClick"
		},
		"49": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.onHover"
		},
		"50": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.onHoverSurface"
		},
		"51": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.onHoverOff"
		},
		"52": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.onHoverEnter"
		},
		"53": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.onHoverOut"
		},
		"54": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.onPicked"
		},
		"55": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.onPickedSurface"
		},
		"56": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.onPickedNothing"
		},
		"57": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.onDoublePicked"
		},
		"58": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.onDoublePickedSurface"
		},
		"59": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.onDoublePickedNothing"
		},
		"60": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.onHoverSnapOrSurfaceOff"
		},
		"61": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.onHoverSnapOrSurface"
		},
		"62": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.onRayMove"
		},
		"129": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.keyMap"
		},
		"130": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.keyMap"
		},
		"131": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.keyMap"
		},
		"132": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "value"
		},
		"137": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.pivotElement"
		},
		"138": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.pivotElement"
		},
		"139": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "element"
		},
		"140": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.active"
		},
		"141": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.active"
		},
		"142": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.active"
		},
		"143": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "value"
		},
		"144": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.snapToVertex"
		},
		"145": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.snapToVertex"
		},
		"146": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.snapToVertex"
		},
		"147": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "snapToVertex"
		},
		"148": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.snapToEdge"
		},
		"149": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.snapToEdge"
		},
		"150": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.snapToEdge"
		},
		"151": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "snapToEdge"
		},
		"152": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.snapRadius"
		},
		"153": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.snapRadius"
		},
		"154": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.snapRadius"
		},
		"155": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "snapRadius"
		},
		"156": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.keyboardEnabledOnlyIfMouseover"
		},
		"157": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.keyboardEnabledOnlyIfMouseover"
		},
		"158": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.keyboardEnabledOnlyIfMouseover"
		},
		"159": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "value"
		},
		"160": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.navMode"
		},
		"161": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.navMode"
		},
		"162": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.navMode"
		},
		"163": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "navMode"
		},
		"164": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.pointerEnabled"
		},
		"165": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.pointerEnabled"
		},
		"166": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.pointerEnabled"
		},
		"167": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "value"
		},
		"168": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl._reset"
		},
		"169": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl._reset"
		},
		"170": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.followPointer"
		},
		"171": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.followPointer"
		},
		"172": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.followPointer"
		},
		"173": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "value"
		},
		"174": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.pivotPos"
		},
		"175": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.pivotPos"
		},
		"176": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.pivotPos"
		},
		"177": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "worldPos"
		},
		"178": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.dollyToPointer"
		},
		"179": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.dollyToPointer"
		},
		"180": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.dollyToPointer"
		},
		"181": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "value"
		},
		"182": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.panToPointer"
		},
		"183": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.panToPointer"
		},
		"184": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.panToPointer"
		},
		"185": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "value"
		},
		"186": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.planView"
		},
		"187": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.planView"
		},
		"188": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.planView"
		},
		"189": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "value"
		},
		"190": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.firstPerson"
		},
		"191": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.firstPerson"
		},
		"192": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.firstPerson"
		},
		"193": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "value"
		},
		"194": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.constrainVertical"
		},
		"195": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.constrainVertical"
		},
		"196": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.constrainVertical"
		},
		"197": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "value"
		},
		"198": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.doublePickFlyTo"
		},
		"199": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.doublePickFlyTo"
		},
		"200": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.doublePickFlyTo"
		},
		"201": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "value"
		},
		"202": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.panRightClick"
		},
		"203": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.panRightClick"
		},
		"204": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.panRightClick"
		},
		"205": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "value"
		},
		"206": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.rotationInertia"
		},
		"207": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.rotationInertia"
		},
		"208": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.rotationInertia"
		},
		"209": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "rotationInertia"
		},
		"210": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.keyboardPanRate"
		},
		"211": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.keyboardPanRate"
		},
		"212": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.keyboardPanRate"
		},
		"213": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "keyboardPanRate"
		},
		"214": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.touchPanRate"
		},
		"215": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.touchPanRate"
		},
		"216": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.touchPanRate"
		},
		"217": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "touchPanRate"
		},
		"218": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.keyboardRotationRate"
		},
		"219": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.keyboardRotationRate"
		},
		"220": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.keyboardRotationRate"
		},
		"221": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "keyboardRotationRate"
		},
		"222": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.dragRotationRate"
		},
		"223": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.dragRotationRate"
		},
		"224": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.dragRotationRate"
		},
		"225": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "dragRotationRate"
		},
		"226": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.keyboardDollyRate"
		},
		"227": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.keyboardDollyRate"
		},
		"228": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.keyboardDollyRate"
		},
		"229": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "keyboardDollyRate"
		},
		"230": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.touchDollyRate"
		},
		"231": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.touchDollyRate"
		},
		"232": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.touchDollyRate"
		},
		"233": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "touchDollyRate"
		},
		"234": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.mouseWheelDollyRate"
		},
		"235": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.mouseWheelDollyRate"
		},
		"236": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.mouseWheelDollyRate"
		},
		"237": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "mouseWheelDollyRate"
		},
		"238": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.dollyInertia"
		},
		"239": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.dollyInertia"
		},
		"240": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.dollyInertia"
		},
		"241": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "dollyInertia"
		},
		"242": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.dollyProximityThreshold"
		},
		"243": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.dollyProximityThreshold"
		},
		"244": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.dollyProximityThreshold"
		},
		"245": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "dollyProximityThreshold"
		},
		"246": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.dollyMinSpeed"
		},
		"247": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.dollyMinSpeed"
		},
		"248": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.dollyMinSpeed"
		},
		"249": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "dollyMinSpeed"
		},
		"250": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.panInertia"
		},
		"251": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.panInertia"
		},
		"252": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.panInertia"
		},
		"253": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "panInertia"
		},
		"254": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.keyboardLayout"
		},
		"255": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.keyboardLayout"
		},
		"256": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.keyboardLayout"
		},
		"257": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "value"
		},
		"258": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.enablePivotSphere"
		},
		"259": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.enablePivotSphere"
		},
		"260": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "cfg"
		},
		"261": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "__object"
		},
		"262": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.disablePivotSphere"
		},
		"263": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.disablePivotSphere"
		},
		"264": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.smartPivot"
		},
		"265": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.smartPivot"
		},
		"266": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.smartPivot"
		},
		"267": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "enabled"
		},
		"268": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.doubleClickTimeFrame"
		},
		"269": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.doubleClickTimeFrame"
		},
		"270": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl.doubleClickTimeFrame"
		},
		"271": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "value"
		},
		"274": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl._destroyHandlers"
		},
		"275": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl._destroyHandlers"
		},
		"276": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl._destroyControllers"
		},
		"277": {
			"sourceFileName": "src/CameraControl.ts",
			"qualifiedName": "CameraControl._destroyControllers"
		},
		"279": {
			"sourceFileName": "../core/src/Component.ts",
			"qualifiedName": "Component.id"
		},
		"280": {
			"sourceFileName": "../core/src/Component.ts",
			"qualifiedName": "Component.destroyed"
		},
		"281": {
			"sourceFileName": "../core/src/Component.ts",
			"qualifiedName": "Component.dirty"
		},
		"282": {
			"sourceFileName": "../core/src/Component.ts",
			"qualifiedName": "Component.onDestroyed"
		},
		"283": {
			"sourceFileName": "../core/src/Component.ts",
			"qualifiedName": "Component.log"
		},
		"284": {
			"sourceFileName": "../core/src/Component.ts",
			"qualifiedName": "Component.log"
		},
		"285": {
			"sourceFileName": "../core/src/Component.ts",
			"qualifiedName": "message"
		},
		"286": {
			"sourceFileName": "../core/src/Component.ts",
			"qualifiedName": "Component.warn"
		},
		"287": {
			"sourceFileName": "../core/src/Component.ts",
			"qualifiedName": "Component.warn"
		},
		"288": {
			"sourceFileName": "../core/src/Component.ts",
			"qualifiedName": "message"
		},
		"289": {
			"sourceFileName": "../core/src/Component.ts",
			"qualifiedName": "Component.error"
		},
		"290": {
			"sourceFileName": "../core/src/Component.ts",
			"qualifiedName": "Component.error"
		},
		"291": {
			"sourceFileName": "../core/src/Component.ts",
			"qualifiedName": "message"
		},
		"292": {
			"sourceFileName": "../core/src/Component.ts",
			"qualifiedName": "Component.setDirty"
		},
		"293": {
			"sourceFileName": "../core/src/Component.ts",
			"qualifiedName": "Component.setDirty"
		},
		"294": {
			"sourceFileName": "../core/src/Component.ts",
			"qualifiedName": "Component.cleanIfDirty"
		},
		"295": {
			"sourceFileName": "../core/src/Component.ts",
			"qualifiedName": "Component.cleanIfDirty"
		},
		"296": {
			"sourceFileName": "../core/src/Component.ts",
			"qualifiedName": "Component.clean"
		},
		"297": {
			"sourceFileName": "../core/src/Component.ts",
			"qualifiedName": "Component.clean"
		}
	}
}